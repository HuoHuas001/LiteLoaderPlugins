// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include <Global.h>
#include "StructurePiece.hpp"
#define EXTRA_INCLUDE_PART_TEMPLATESTRUCTUREPIECE
#include "Extra/TemplateStructurePieceAPI.hpp"
#undef EXTRA_INCLUDE_PART_TEMPLATESTRUCTUREPIECE
class TemplateStructurePiece : public StructurePiece {
#include "Extra/TemplateStructurePieceAPI.hpp"
public:
    /*0*/ virtual ~TemplateStructurePiece();
    /*1*/ virtual void moveBoundingBox(int, int, int);
    /*2*/ virtual bool isValid() const;
    /*3*/ virtual int /*enum StructurePieceType*/ getType() const;
    /*4*/ virtual void addChildren(class StructurePiece&, std::vector<std::unique_ptr<class StructurePiece>>&, class Random&);
    /*5*/ virtual bool postProcess(class BlockSource&, class Random&, class BoundingBox const&);
    /*6*/ virtual void postProcessMobsAt(class BlockSource&, class Random&, class BoundingBox const&);
    /*10*/ virtual bool canBeReplaced(class BlockSource&, int, int, int, class BoundingBox const&);
    /*12*/ virtual int getWorldZ(int, int);
    /*13*/ virtual void placeBlock(class BlockSource&, class Block const&, int, int, int, class BoundingBox const&) = 0;
    /*14*/ virtual void unk_vfn_14();
    /*15*/ virtual void generateBox(class BlockSource&, class BoundingBox const&, int, int, int, int, int, int, class Block const&, class Block const&, bool);

private:
    MCAPI void _setBoundingBoxFromTemplate();

protected:
    MCAPI void _setup(class LegacyStructureTemplate&, class LegacyStructureSettings const&, class BlockPos const&);
};