// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include <Global.h>
#define EXTRA_INCLUDE_PART_CHUNKLOADACTIONLIST
#include "Extra/ChunkLoadActionListAPI.hpp"
#undef EXTRA_INCLUDE_PART_CHUNKLOADACTIONLIST
class ChunkLoadActionList {
#include "Extra/ChunkLoadActionListAPI.hpp"

public:
    MCAPI void addChunkLoadedRequest(class ChunkLoadedRequest, std::string const&, enum ChunksLoadedStatus, class LevelStorage&);
    MCAPI void loadRequests(class LevelStorage&, class ICommandOriginLoader&, std::string const&);
    MCAPI void onChunkLoaded(class ServerLevel&, class LevelStorage&, class Dimension&, class LevelChunk&);
    MCAPI void onStaticTickingAreaAdded(class ServerLevel&, class LevelStorage&, class Dimension&, std::string const&);
    MCAPI enum QueueRequestResult queueRequestOrExecuteAction(class ChunkLoadedRequest, class ServerLevel&, class LevelStorage&, class Dimension&);
    MCAPI void tickRequests(class ServerLevel&, class Dimension&);

private:
    MCAPI void _addChunkLoadedRequest(class ChunkLoadedRequest, std::string const&, enum ChunksLoadedStatus, class LevelStorage&);
    MCAPI bool _handleChunksLoadedStatusAsyncCallback(class ChunkLoadedRequest&, enum ChunksLoadedStatus, class ServerLevel&, class Dimension&, class LevelStorage&);
    MCAPI void _saveRequest(class ChunkLoadedRequest&, std::string const&, enum ChunkRequestListType, class LevelStorage&);
};