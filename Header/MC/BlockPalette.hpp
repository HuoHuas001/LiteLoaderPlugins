// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include "../Global.h"
#define EXTRA_INCLUDE_PART_BLOCKPALETTE
#include "Extra/BlockPaletteAPI.hpp"
#undef EXTRA_INCLUDE_PART_BLOCKPALETTE
class BlockPalette {
#include "Extra/BlockPaletteAPI.hpp"
public:
    MCAPI void cacheBlockComponentData();
    MCAPI class Block const& convertLegacyBlock(struct BlockID, unsigned short) const;
    MCAPI bool convertLegacyBlocks(class buffer_span_mut<class Block const*>, class buffer_span<struct BlockID>, class buffer_span<struct NibblePair>, unsigned __int64) const;
    MCAPI class Block const& getBlock(unsigned int const&) const;
    MCAPI class Block const& getBlock(class CompoundTag const&) const;
    MCAPI class Block const& getBlockFromLegacyData(struct NewBlockID, unsigned int) const;
    MCAPI class BlockLegacy const* getBlockLegacy(std::string const&) const;
    MCAPI void initFromBlockDefinitions();
    MCAPI class Block const& switchBlock(class Block const&, class BlockLegacy const&) const;

protected:

private:
    MCAPI bool shouldWarnFor(struct NewBlockID, unsigned short) const;
};