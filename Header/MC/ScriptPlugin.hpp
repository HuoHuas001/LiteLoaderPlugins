// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include "../Global.h"
#define EXTRA_INCLUDE_PART_SCRIPTPLUGIN
#include "Extra/ScriptPluginAPI.hpp"
#undef EXTRA_INCLUDE_PART_SCRIPTPLUGIN
class ScriptPlugin {
#include "Extra/ScriptPluginAPI.hpp"
public:
    /*0*/ virtual ~ScriptPlugin();
    /*1*/ virtual class std::optional<std::string > onLoadScript(std::string const&);
    /*
    inline class std::optional<std::string > onLoadScript(std::string const& a0){
        class std::optional<std::string > (ScriptPlugin::*rv)(std::string const&);
        *((void**)&rv) = dlsym("?onLoadScript@ScriptPlugin@@UEAA?AV?$optional@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z");
        return (this->*rv)(std::forward<std::string const&>(a0));
    }
    */
    MCAPI bool hasErrors() const;
    MCAPI std::vector<std::string> reportErrors() const;

protected:

private:
    MCAPI class std::optional<std::string > _loadScript(std::string const&);
};