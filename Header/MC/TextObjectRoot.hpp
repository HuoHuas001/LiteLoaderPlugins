// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include "../Global.h"
#include "Json.hpp"
#define EXTRA_INCLUDE_PART_TEXTOBJECTROOT
#include "Extra/TextObjectRootAPI.hpp"
#undef EXTRA_INCLUDE_PART_TEXTOBJECTROOT
class TextObjectRoot {
#include "Extra/TextObjectRootAPI.hpp"
public:
    /*0*/ virtual ~TextObjectRoot();
    /*1*/ virtual std::string asString() const;
    /*2*/ virtual class Json::Value asJsonValue() const;
    /*3*/ virtual class Json::Value resolve(struct ResolveData const&) const;
    /*
    inline class Json::Value asJsonValue() const{
        class Json::Value (TextObjectRoot::*rv)() const;
        *((void**)&rv) = dlsym("?asJsonValue@TextObjectRoot@@UEBA?AVValue@Json@@XZ");
        return (this->*rv)();
    }
    inline std::string asString() const{
        std::string (TextObjectRoot::*rv)() const;
        *((void**)&rv) = dlsym("?asString@TextObjectRoot@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ");
        return (this->*rv)();
    }
    inline class Json::Value resolve(struct ResolveData const& a0) const{
        class Json::Value (TextObjectRoot::*rv)(struct ResolveData const&) const;
        *((void**)&rv) = dlsym("?resolve@TextObjectRoot@@UEBA?AVValue@Json@@AEBUResolveData@@@Z");
        return (this->*rv)(std::forward<struct ResolveData const&>(a0));
    }
    */
    MCAPI void addChild(std::unique_ptr<class ITextObject>);
    MCAPI void clear();
    MCAPI bool isEmpty() const;
    MCAPI class ResolvedTextObject resolveRoot(class Actor const&, class Scoreboard const&) const;

protected:

private:
};