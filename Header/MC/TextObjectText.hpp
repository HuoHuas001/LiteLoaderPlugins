// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include "../Global.h"
#include "Json.hpp"
#define EXTRA_INCLUDE_PART_TEXTOBJECTTEXT
#include "Extra/TextObjectTextAPI.hpp"
#undef EXTRA_INCLUDE_PART_TEXTOBJECTTEXT
class TextObjectText {
#include "Extra/TextObjectTextAPI.hpp"
public:
    /*0*/ virtual ~TextObjectText();
    /*1*/ virtual void __unk_vfn_0();
    /*2*/ virtual class Json::Value asJsonValue() const;
    /*
    inline std::string asString() const{
        std::string (TextObjectText::*rv)() const;
        *((void**)&rv) = dlsym("?asString@TextObjectText@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ");
        return (this->*rv)();
    }
    inline class Json::Value asJsonValue() const{
        class Json::Value (TextObjectText::*rv)() const;
        *((void**)&rv) = dlsym("?asJsonValue@TextObjectText@@UEBA?AVValue@Json@@XZ");
        return (this->*rv)();
    }
    inline class Json::Value resolve(struct ResolveData const& a0) const{
        class Json::Value (TextObjectText::*rv)(struct ResolveData const&) const;
        *((void**)&rv) = dlsym("?resolve@TextObjectText@@UEBA?AVValue@Json@@AEBUResolveData@@@Z");
        return (this->*rv)(std::forward<struct ResolveData const&>(a0));
    }
    */
    MCAPI static class Json::Value asJsonValue(std::string const&);

protected:

private:
};