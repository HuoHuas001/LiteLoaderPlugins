// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include <Global.h>
#define EXTRA_INCLUDE_PART_MATERIAL
#include "Extra/MaterialAPI.hpp"
#undef EXTRA_INCLUDE_PART_MATERIAL
class Material {
#include "Extra/MaterialAPI.hpp"

public:
    MCAPI bool isSolid() const;
    MCAPI bool operator!=(class Material const&);
    MCAPI bool operator==(class Material const&);
    MCAPI bool getBlocksMotion() const;
    MCAPI bool getBlocksPrecipitation() const;
    MCAPI float getTranslucency() const;
    MCAPI bool isAlwaysDestroyable() const;
    MCAPI bool isFlammable() const;
    MCAPI bool isLiquid() const;
    MCAPI bool isReplaceable() const;
    MCAPI bool isSolidBlocking() const;
    MCAPI bool isSuperHot() const;
    MCAPI bool isTopSolid(bool, bool) const;
    MCAPI bool isType(enum MaterialType) const;

    MCAPI static void addMaterial(std::unique_ptr<class Material>);
    MCAPI static class Material const& getMaterial(enum MaterialType);
    MCAPI static void initMaterials();
    MCAPI static void teardownMaterials();

private:
    MCAPI static void _setupSurfaceMaterials();
    MCAPI static bool mInitialized;
    MCAPI static std::vector<std::unique_ptr<class Material>> mMaterials;
};