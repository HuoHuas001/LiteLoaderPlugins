// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include "../Global.h"
#define EXTRA_INCLUDE_PART_VARINTDATAINPUT
#include "Extra/VarIntDataInputAPI.hpp"
#undef EXTRA_INCLUDE_PART_VARINTDATAINPUT
class VarIntDataInput {
#include "Extra/VarIntDataInputAPI.hpp"
public:
    /*0*/ virtual ~VarIntDataInput();
    /*1*/ virtual void __unk_vfn_0();
    /*2*/ virtual void __unk_vfn_1();
    /*3*/ virtual float readFloat();
    /*4*/ virtual double readDouble();
    /*5*/ virtual char readByte();
    /*6*/ virtual short readShort();
    /*7*/ virtual int readInt();
    /*8*/ virtual __int64 readLongLong();
    /*9*/ virtual void __unk_vfn_2();
    /*10*/ virtual unsigned __int64 numBytesLeft() const;
    /*
    inline unsigned __int64 numBytesLeft() const{
        unsigned __int64 (VarIntDataInput::*rv)() const;
        *((void**)&rv) = dlsym("?numBytesLeft@VarIntDataInput@@UEBA_KXZ");
        return (this->*rv)();
    }
    inline char readByte(){
        char (VarIntDataInput::*rv)();
        *((void**)&rv) = dlsym("?readByte@VarIntDataInput@@UEAADXZ");
        return (this->*rv)();
    }
    inline bool readBytes(void* a0, unsigned __int64 a1){
        bool (VarIntDataInput::*rv)(void*, unsigned __int64);
        *((void**)&rv) = dlsym("?readBytes@VarIntDataInput@@UEAA_NPEAX_K@Z");
        return (this->*rv)(std::forward<void*>(a0), std::forward<unsigned __int64>(a1));
    }
    inline double readDouble(){
        double (VarIntDataInput::*rv)();
        *((void**)&rv) = dlsym("?readDouble@VarIntDataInput@@UEAANXZ");
        return (this->*rv)();
    }
    inline float readFloat(){
        float (VarIntDataInput::*rv)();
        *((void**)&rv) = dlsym("?readFloat@VarIntDataInput@@UEAAMXZ");
        return (this->*rv)();
    }
    inline int readInt(){
        int (VarIntDataInput::*rv)();
        *((void**)&rv) = dlsym("?readInt@VarIntDataInput@@UEAAHXZ");
        return (this->*rv)();
    }
    inline __int64 readLongLong(){
        __int64 (VarIntDataInput::*rv)();
        *((void**)&rv) = dlsym("?readLongLong@VarIntDataInput@@UEAA_JXZ");
        return (this->*rv)();
    }
    inline std::string readLongString(){
        std::string (VarIntDataInput::*rv)();
        *((void**)&rv) = dlsym("?readLongString@VarIntDataInput@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ");
        return (this->*rv)();
    }
    inline std::string readString(){
        std::string (VarIntDataInput::*rv)();
        *((void**)&rv) = dlsym("?readString@VarIntDataInput@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ");
        return (this->*rv)();
    }
    inline short readShort(){
        short (VarIntDataInput::*rv)();
        *((void**)&rv) = dlsym("?readShort@VarIntDataInput@@UEAAFXZ");
        return (this->*rv)();
    }
    */

protected:

private:
};