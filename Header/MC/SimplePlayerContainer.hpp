// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include "../Global.h"
#include "SimpleContainer.hpp"
#define EXTRA_INCLUDE_PART_SIMPLEPLAYERCONTAINER
#include "Extra/SimplePlayerContainerAPI.hpp"
#undef EXTRA_INCLUDE_PART_SIMPLEPLAYERCONTAINER
class SimplePlayerContainer : public SimpleContainer {
#include "Extra/SimplePlayerContainerAPI.hpp"
public:
    /*0*/ virtual ~SimplePlayerContainer();
    /*1*/ virtual void init();
    /*2*/ virtual void setItem(int, class ItemStack const&);
    /*3*/ virtual void __unk_vfn_0();
    /*4*/ virtual int getMaxStackSize() const;
    /*5*/ virtual void startOpen(class Player&);
    /*6*/ virtual void stopOpen(class Player&);
    /*7*/ virtual void __unk_vfn_1();
    /*8*/ virtual void __unk_vfn_2();
    /*9*/ virtual void __unk_vfn_3();
    /*
    inline void setItem(int a0, class ItemStack const& a1){
        void (SimplePlayerContainer::*rv)(int, class ItemStack const&);
        *((void**)&rv) = dlsym("?setItem@SimplePlayerContainer@@UEAAXHAEBVItemStack@@@Z");
        return (this->*rv)(std::forward<int>(a0), std::forward<class ItemStack const&>(a1));
    }
    */

protected:

private:
};