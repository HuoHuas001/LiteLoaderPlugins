// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include <Global.h>
#define EXTRA_INCLUDE_PART_CONTAINERSCREENVALIDATION
#include "Extra/ContainerScreenValidationAPI.hpp"
#undef EXTRA_INCLUDE_PART_CONTAINERSCREENVALIDATION
class ContainerScreenValidation {
#include "Extra/ContainerScreenValidationAPI.hpp"
public:
    /*0*/ virtual ~ContainerScreenValidation();
    /*1*/ virtual struct ContainerValidationResult tryTransfer(struct ContainerValidationSlotData const&, struct ContainerValidationSlotData const&, int, bool);
    /*2*/ virtual class std::shared_ptr<class SimpleSparseContainer> getOrCreateSparseContainer(int /*enum ContainerEnumName*/);
    /*3*/ virtual int /*enum ItemAddType*/ _canAdd(struct ContainerValidatorPairScope const&, int, class ItemStackBase const&, int) const;
    /*4*/ virtual int /*enum ItemSetType*/ _canSet(struct ContainerValidatorPairScope const&, int, class ItemStackBase const&, int) const;
    /*5*/ virtual bool _canRemove(struct ContainerValidatorPairScope const&, int, int, bool) const;
    /*6*/ virtual bool _canDestroy(struct ContainerValidatorPairScope const&) const;

public:
    MCAPI bool tryCommitActionResults();
    MCAPI struct ContainerValidationResult tryConsume(struct ContainerValidationSlotData const&, int);
    MCAPI struct ContainerValidationResult tryDestroy(struct ContainerValidationSlotData const&, int);
    MCAPI struct ContainerValidationResult tryDrop(struct ContainerValidationSlotData const&, int, bool);

private:
    MCAPI struct ContainerValidatorPairScope _createContainerValidatorPairScope(enum ContainerEnumName);
    MCAPI class std::shared_ptr<class ContainerValidationBase const> _getOrCreateContainerValidator(enum ContainerEnumName);
    MCAPI bool _isValidSlot(struct ContainerValidatorPairScope const&, int) const;

protected:
    MCAPI class ItemStack _tryRemoveItem(struct ContainerValidatorPairScope&, int, int, bool);
    MCAPI struct ContainerValidationResult _tryTransferSpecial(struct ContainerValidationSlotData const&, int, enum ContainerScreenRequestActionType);
};