// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include "../Global.h"
#include "BlockEventListener.hpp"
#define EXTRA_INCLUDE_PART_SCRIPTBLOCKEVENTLISTENER
#include "Extra/ScriptBlockEventListenerAPI.hpp"
#undef EXTRA_INCLUDE_PART_SCRIPTBLOCKEVENTLISTENER
class ScriptBlockEventListener : public BlockEventListener {
#include "Extra/ScriptBlockEventListenerAPI.hpp"
public:
    /*0*/ virtual ~ScriptBlockEventListener();
    /*1*/ virtual void __unk_vfn_0();
    /*2*/ virtual void __unk_vfn_1();
    /*3*/ virtual void __unk_vfn_2();
    /*4*/ virtual void __unk_vfn_3();
    /*5*/ virtual void __unk_vfn_4();
    /*6*/ virtual int /*enum enum EventResult*/ onBlockExploded(class BlockPos const&, class Block const&, class Actor*);
    /*7*/ virtual void __unk_vfn_5();
    /*8*/ virtual void __unk_vfn_6();
    /*9*/ virtual void __unk_vfn_7();
    /*10*/ virtual void __unk_vfn_8();
    /*11*/ virtual void __unk_vfn_9();
    /*12*/ virtual int /*enum enum EventResult*/ onPistonActionEvent(struct PistonActionEvent const&);
    /*13*/ virtual void __unk_vfn_10();
    /*14*/ virtual void __unk_vfn_11();
    /*15*/ virtual void __unk_vfn_12();
    /*16*/ virtual int /*enum enum EventResult*/ onExplosionStartedEvent(struct ExplosionStartedEvent const&);
    /*
    inline int \/*enum enum EventResult*\/ onBlockExploded(class BlockPos const& a0, class Block const& a1, class Actor* a2){
        int \/*enum enum EventResult*\/ (ScriptBlockEventListener::*rv)(class BlockPos const&, class Block const&, class Actor*);
        *((void**)&rv) = dlsym("?onBlockExploded@ScriptBlockEventListener@@UEAA?AW4EventResult@@AEBVBlockPos@@AEBVBlock@@PEAVActor@@@Z");
        return (this->*rv)(std::forward<class BlockPos const&>(a0), std::forward<class Block const&>(a1), std::forward<class Actor*>(a2));
    }
    inline int \/*enum enum EventResult*\/ onExplosionStartedEvent(struct ExplosionStartedEvent const& a0){
        int \/*enum enum EventResult*\/ (ScriptBlockEventListener::*rv)(struct ExplosionStartedEvent const&);
        *((void**)&rv) = dlsym("?onExplosionStartedEvent@ScriptBlockEventListener@@UEAA?AW4EventResult@@AEBUExplosionStartedEvent@@@Z");
        return (this->*rv)(std::forward<struct ExplosionStartedEvent const&>(a0));
    }
    inline int \/*enum enum EventResult*\/ onPistonActionEvent(struct PistonActionEvent const& a0){
        int \/*enum enum EventResult*\/ (ScriptBlockEventListener::*rv)(struct PistonActionEvent const&);
        *((void**)&rv) = dlsym("?onPistonActionEvent@ScriptBlockEventListener@@UEAA?AW4EventResult@@AEBUPistonActionEvent@@@Z");
        return (this->*rv)(std::forward<struct PistonActionEvent const&>(a0));
    }
    */

protected:

private:
};