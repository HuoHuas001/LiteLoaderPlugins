// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include <Global.h>
#define EXTRA_INCLUDE_PART_MOBEFFECT
#include "Extra/MobEffectAPI.hpp"
#undef EXTRA_INCLUDE_PART_MOBEFFECT
class MobEffect {
#include "Extra/MobEffectAPI.hpp"
public:
    /*0*/ virtual ~MobEffect();
    /*1*/ virtual void applyEffects(class Actor*, int, int) const;
    /*2*/ virtual void removeEffects(class Actor*);
    /*3*/ virtual void applyInstantaneousEffect(class Actor*, class Actor*, class Actor*, int, float) const;
    /*4*/ virtual bool isInstantaneous() const;
    /*5*/ virtual float getAttributeModifierValue(int, class AttributeModifier const&) const;

public:
    MCAPI void addAttributeBuff(class Attribute const&, class std::shared_ptr<class AttributeBuff>);
    MCAPI void addAttributeModifier(class Attribute const&, class std::shared_ptr<class AttributeModifier>);
    MCAPI class HashedString const& getComponentName() const;
    MCAPI std::string const& getDescriptionId() const;
    MCAPI float getDurationModifier() const;
    MCAPI unsigned int getId() const;
    MCAPI std::string const& getResourceName() const;
    MCAPI bool isHarmful() const;
    MCAPI bool isVisible() const;
    MCAPI void setDurationAmplifier(class std::shared_ptr<class Amplifier>);
    MCAPI void setValueAmplifier(class std::shared_ptr<class Amplifier>);
    MCAPI std::vector<struct std::pair<class Attribute const*, class std::shared_ptr<class AttributeModifier>>> const& viewAttributeModifiers() const;

    MCAPI static class mce::Color const DEFAULT_COLOR;
    MCAPI static class MobEffect* getById(int);
    MCAPI static class MobEffect* getByName(std::string const&);
    MCAPI static void initEffects(class ResourcePackManager*, class Experiments const&);
    MCAPI static void shutdownEffects();

private:
    MCAPI static void darknessEffectFactorUpdate(struct MobEffect::FactorCalculationData&, int);

protected:
    MCAPI class InstantaneousAttributeBuff _createInstantBuff(class AttributeBuff const&, int, float) const;
    MCAPI class TemporalAttributeBuff _createTemporalBuff(class AttributeBuff const&, int, int) const;
};