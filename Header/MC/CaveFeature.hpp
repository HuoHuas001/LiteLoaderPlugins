// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include <Global.h>
#include "CaveFeatureUtils.hpp"
#define EXTRA_INCLUDE_PART_CAVEFEATURE
#include "Extra/CaveFeatureAPI.hpp"
#undef EXTRA_INCLUDE_PART_CAVEFEATURE
class CaveFeature {
#include "Extra/CaveFeatureAPI.hpp"
public:
    /*0*/ virtual ~CaveFeature();
    /*1*/ virtual class std::optional<class BlockPos> place(class IBlockWorldGenAPI&, class BlockPos const&, class Random&, class RenderParams&) const;
    /*2*/ virtual bool isValidPlacement(std::string const&);
    /*3*/ virtual void addRoom(class IBlockWorldGenAPI&, struct CaveFeatureUtils::CarverConfiguration const&, class Random&, class ChunkPos const&, class Vec3 const&, class RenderParams&, struct CaveFeatureUtils::CarvingParameters const&, std::vector<struct CaveFeature::CachedMetaData::CarveEllipsoidParams>&) const;
    /*4*/ virtual void addTunnel(class IBlockWorldGenAPI&, struct CaveFeatureUtils::CarverConfiguration const&, class Random&, class ChunkPos const&, class Vec3 const&, float, float, float, int, int, float, class RenderParams&, struct CaveFeatureUtils::CarvingParameters const&, std::vector<struct CaveFeature::CachedMetaData::CarveEllipsoidParams>&) const;
    /*5*/ virtual bool carveEllipsoidVolume(class IBlockWorldGenAPI&, struct CaveFeatureUtils::CarverConfiguration const&, class Random&, class ChunkPos const&, class Vec3 const&, class BoundingBox const&, float, float, struct CaveFeatureUtils::CarvingParameters const&) const;
    /*6*/ virtual void addFeature(class IBlockWorldGenAPI&, class ChunkPos const&, class Random&, class ChunkPos const&, class RenderParams&, std::vector<struct CaveFeature::CachedMetaData::CarveEllipsoidParams>&) const;

public:
    MCAPI float getWidthModifier(class RenderParams&) const;

protected:
    MCAPI bool carveBlock(class IBlockWorldGenAPI&, struct CaveFeatureUtils::CarverConfiguration const&, class BlockPos, bool*, bool, class Vec3 const&, int, class BlockPos) const;
    MCAPI bool carveEllipsoid(class IBlockWorldGenAPI&, struct CaveFeatureUtils::CarverConfiguration const&, class Random&, class ChunkPos const&, class Vec3 const&, float, float, struct CaveFeatureUtils::CarvingParameters const&) const;
    MCAPI bool detectWater(class IBlockWorldGenAPI&, class BoundingBox const&) const;
};