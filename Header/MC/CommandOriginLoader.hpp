// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include "../Global.h"
#define EXTRA_INCLUDE_PART_COMMANDORIGINLOADER
#include "Extra/CommandOriginLoaderAPI.hpp"
#undef EXTRA_INCLUDE_PART_COMMANDORIGINLOADER
class CommandOriginLoader {
#include "Extra/CommandOriginLoaderAPI.hpp"
public:
    /*0*/ virtual ~CommandOriginLoader();
    /*1*/ virtual std::unique_ptr<class CommandOrigin> load(class CompoundTag const&);
    /*
    inline std::unique_ptr<class CommandOrigin> load(class CompoundTag const& a0){
        std::unique_ptr<class CommandOrigin> (CommandOriginLoader::*rv)(class CompoundTag const&);
        *((void**)&rv) = dlsym("?load@CommandOriginLoader@@UEAA?AV?$unique_ptr@VCommandOrigin@@U?$default_delete@VCommandOrigin@@@std@@@std@@AEBVCompoundTag@@@Z");
        return (this->*rv)(std::forward<class CompoundTag const&>(a0));
    }
    */
    MCAPI static std::unique_ptr<class CommandOrigin> load(class CompoundTag const&, class ServerLevel&);

protected:

private:
};