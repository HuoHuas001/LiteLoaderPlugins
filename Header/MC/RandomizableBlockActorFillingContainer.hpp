// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include "../Global.h"
#define EXTRA_INCLUDE_PART_RANDOMIZABLEBLOCKACTORFILLINGCONTAINER
#include "Extra/RandomizableBlockActorFillingContainerAPI.hpp"
#undef EXTRA_INCLUDE_PART_RANDOMIZABLEBLOCKACTORFILLINGCONTAINER
class RandomizableBlockActorFillingContainer {
#include "Extra/RandomizableBlockActorFillingContainerAPI.hpp"
public:    /*
    inline void dropContents(class BlockSource& a0, class Vec3 const& a1, bool a2){
        void (RandomizableBlockActorFillingContainer::*rv)(class BlockSource&, class Vec3 const&, bool);
        *((void**)&rv) = dlsym("?dropContents@RandomizableBlockActorFillingContainer@@UEAAXAEAVBlockSource@@AEBVVec3@@_N@Z");
        return (this->*rv)(std::forward<class BlockSource&>(a0), std::forward<class Vec3 const&>(a1), std::forward<bool>(a2));
    }
    inline void initializeContainerContents(class BlockSource& a0){
        void (RandomizableBlockActorFillingContainer::*rv)(class BlockSource&);
        *((void**)&rv) = dlsym("?initializeContainerContents@RandomizableBlockActorFillingContainer@@UEAAXAEAVBlockSource@@@Z");
        return (this->*rv)(std::forward<class BlockSource&>(a0));
    }
    inline void setContainerChanged(int a0){
        void (RandomizableBlockActorFillingContainer::*rv)(int);
        *((void**)&rv) = dlsym("?setContainerChanged@RandomizableBlockActorFillingContainer@@UEAAXH@Z");
        return (this->*rv)(std::forward<int>(a0));
    }
    inline void startOpen(class Player& a0){
        void (RandomizableBlockActorFillingContainer::*rv)(class Player&);
        *((void**)&rv) = dlsym("?startOpen@RandomizableBlockActorFillingContainer@@UEAAXAEAVPlayer@@@Z");
        return (this->*rv)(std::forward<class Player&>(a0));
    }
    */

protected:

private:
};