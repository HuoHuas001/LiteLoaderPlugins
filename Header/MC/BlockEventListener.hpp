// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include "../Global.h"
#define EXTRA_INCLUDE_PART_BLOCKEVENTLISTENER
#include "Extra/BlockEventListenerAPI.hpp"
#undef EXTRA_INCLUDE_PART_BLOCKEVENTLISTENER
class BlockEventListener {
#include "Extra/BlockEventListenerAPI.hpp"
public:
    /*0*/ virtual ~BlockEventListener();
    /*1*/ virtual void __unk_vfn_0();
    /*2*/ virtual int /*enum enum EventResult*/ onBlockDestroyedByPlayer(class Player&, std::string, class BlockPos const&);
    /*3*/ virtual void __unk_vfn_1();
    /*4*/ virtual void __unk_vfn_2();
    /*5*/ virtual void __unk_vfn_3();
    /*6*/ virtual void __unk_vfn_4();
    /*7*/ virtual int /*enum enum EventResult*/ onBlockExploded(class BlockPos const&, class Block const&, class Actor*);
    /*8*/ virtual void __unk_vfn_5();
    /*9*/ virtual void __unk_vfn_6();
    /*10*/ virtual void __unk_vfn_7();
    /*11*/ virtual void __unk_vfn_8();
    /*12*/ virtual void __unk_vfn_9();
    /*13*/ virtual int /*enum enum EventResult*/ onPistonActionEvent(struct PistonActionEvent const&);
    /*14*/ virtual void __unk_vfn_10();
    /*15*/ virtual void __unk_vfn_11();
    /*16*/ virtual void __unk_vfn_12();
    /*17*/ virtual int /*enum enum EventResult*/ onExplosionStartedEvent(struct ExplosionStartedEvent const&);
    /*
    inline int \/*enum enum EventResult*\/ onCraftUISetResultName(struct CraftUISetResultNameEvent const& a0){
        int \/*enum enum EventResult*\/ (BlockEventListener::*rv)(struct CraftUISetResultNameEvent const&);
        *((void**)&rv) = dlsym("?onCraftUISetResultName@BlockEventListener@@UEAA?AW4EventResult@@AEBUCraftUISetResultNameEvent@@@Z");
        return (this->*rv)(std::forward<struct CraftUISetResultNameEvent const&>(a0));
    }
    inline int \/*enum enum EventResult*\/ onBlockInteractedWith(class Player& a0, class BlockPos const& a1){
        int \/*enum enum EventResult*\/ (BlockEventListener::*rv)(class Player&, class BlockPos const&);
        *((void**)&rv) = dlsym("?onBlockInteractedWith@BlockEventListener@@UEAA?AW4EventResult@@AEAVPlayer@@AEBVBlockPos@@@Z");
        return (this->*rv)(std::forward<class Player&>(a0), std::forward<class BlockPos const&>(a1));
    }
    inline int \/*enum enum EventResult*\/ onBlockDestructionStopped(class Player& a0, class BlockPos const& a1, int a2){
        int \/*enum enum EventResult*\/ (BlockEventListener::*rv)(class Player&, class BlockPos const&, int);
        *((void**)&rv) = dlsym("?onBlockDestructionStopped@BlockEventListener@@UEAA?AW4EventResult@@AEAVPlayer@@AEBVBlockPos@@H@Z");
        return (this->*rv)(std::forward<class Player&>(a0), std::forward<class BlockPos const&>(a1), std::forward<int>(a2));
    }
    inline int \/*enum enum EventResult*\/ onBlockDestructionStarted(class Player& a0, class BlockPos const& a1){
        int \/*enum enum EventResult*\/ (BlockEventListener::*rv)(class Player&, class BlockPos const&);
        *((void**)&rv) = dlsym("?onBlockDestructionStarted@BlockEventListener@@UEAA?AW4EventResult@@AEAVPlayer@@AEBVBlockPos@@@Z");
        return (this->*rv)(std::forward<class Player&>(a0), std::forward<class BlockPos const&>(a1));
    }
    inline int \/*enum enum EventResult*\/ onPreBlockPatterned(struct BlockPatternEvent const& a0){
        int \/*enum enum EventResult*\/ (BlockEventListener::*rv)(struct BlockPatternEvent const&);
        *((void**)&rv) = dlsym("?onPreBlockPatterned@BlockEventListener@@UEAA?AW4EventResult@@AEBUBlockPatternEvent@@@Z");
        return (this->*rv)(std::forward<struct BlockPatternEvent const&>(a0));
    }
    inline int \/*enum enum EventResult*\/ onUnknownBlockReceived(class Level& a0, struct NewBlockID const& a1, unsigned short a2){
        int \/*enum enum EventResult*\/ (BlockEventListener::*rv)(class Level&, struct NewBlockID const&, unsigned short);
        *((void**)&rv) = dlsym("?onUnknownBlockReceived@BlockEventListener@@UEAA?AW4EventResult@@AEAVLevel@@AEBUNewBlockID@@G@Z");
        return (this->*rv)(std::forward<class Level&>(a0), std::forward<struct NewBlockID const&>(a1), std::forward<unsigned short>(a2));
    }
    inline int \/*enum enum EventResult*\/ onChestBlockTryPaired(struct ChestBlockTryPairEvent const& a0){
        int \/*enum enum EventResult*\/ (BlockEventListener::*rv)(struct ChestBlockTryPairEvent const&);
        *((void**)&rv) = dlsym("?onChestBlockTryPaired@BlockEventListener@@UEAA?AW4EventResult@@AEBUChestBlockTryPairEvent@@@Z");
        return (this->*rv)(std::forward<struct ChestBlockTryPairEvent const&>(a0));
    }
    inline int \/*enum enum EventResult*\/ onPostBlockPatterned(struct BlockPatternEvent const& a0){
        int \/*enum enum EventResult*\/ (BlockEventListener::*rv)(struct BlockPatternEvent const&);
        *((void**)&rv) = dlsym("?onPostBlockPatterned@BlockEventListener@@UEAA?AW4EventResult@@AEBUBlockPatternEvent@@@Z");
        return (this->*rv)(std::forward<struct BlockPatternEvent const&>(a0));
    }
    inline int \/*enum enum EventResult*\/ onActorInsideBlock(struct ActorInsideBlockEvent const& a0){
        int \/*enum enum EventResult*\/ (BlockEventListener::*rv)(struct ActorInsideBlockEvent const&);
        *((void**)&rv) = dlsym("?onActorInsideBlock@BlockEventListener@@UEAA?AW4EventResult@@AEBUActorInsideBlockEvent@@@Z");
        return (this->*rv)(std::forward<struct ActorInsideBlockEvent const&>(a0));
    }
    inline int \/*enum enum EventResult*\/ onBlockModified(class BlockPos const& a0, class Block const& a1, class Block const& a2){
        int \/*enum enum EventResult*\/ (BlockEventListener::*rv)(class BlockPos const&, class Block const&, class Block const&);
        *((void**)&rv) = dlsym("?onBlockModified@BlockEventListener@@UEAA?AW4EventResult@@AEBVBlockPos@@AEBVBlock@@1@Z");
        return (this->*rv)(std::forward<class BlockPos const&>(a0), std::forward<class Block const&>(a1), std::forward<class Block const&>(a2));
    }
    inline int \/*enum enum EventResult*\/ onExplosionStartedEvent(struct ExplosionStartedEvent const& a0){
        int \/*enum enum EventResult*\/ (BlockEventListener::*rv)(struct ExplosionStartedEvent const&);
        *((void**)&rv) = dlsym("?onExplosionStartedEvent@BlockEventListener@@UEAA?AW4EventResult@@AEBUExplosionStartedEvent@@@Z");
        return (this->*rv)(std::forward<struct ExplosionStartedEvent const&>(a0));
    }
    inline int \/*enum enum EventResult*\/ onActorStandOnBlock(struct ActorStandOnBlockEvent const& a0){
        int \/*enum enum EventResult*\/ (BlockEventListener::*rv)(struct ActorStandOnBlockEvent const&);
        *((void**)&rv) = dlsym("?onActorStandOnBlock@BlockEventListener@@UEAA?AW4EventResult@@AEBUActorStandOnBlockEvent@@@Z");
        return (this->*rv)(std::forward<struct ActorStandOnBlockEvent const&>(a0));
    }
    inline int \/*enum enum EventResult*\/ onBlockPlacedByPlayer(class Player& a0, class Block const& a1, class BlockPos const& a2, bool a3){
        int \/*enum enum EventResult*\/ (BlockEventListener::*rv)(class Player&, class Block const&, class BlockPos const&, bool);
        *((void**)&rv) = dlsym("?onBlockPlacedByPlayer@BlockEventListener@@UEAA?AW4EventResult@@AEAVPlayer@@AEBVBlock@@AEBVBlockPos@@_N@Z");
        return (this->*rv)(std::forward<class Player&>(a0), std::forward<class Block const&>(a1), std::forward<class BlockPos const&>(a2), std::forward<bool>(a3));
    }
    inline int \/*enum enum EventResult*\/ onBlockMovedByPiston(class BlockPos const& a0, class BlockPos const& a1, int \/*enum enum PistonState*\/ a2){
        int \/*enum enum EventResult*\/ (BlockEventListener::*rv)(class BlockPos const&, class BlockPos const&, int \/*enum enum PistonState*\/);
        *((void**)&rv) = dlsym("?onBlockMovedByPiston@BlockEventListener@@UEAA?AW4EventResult@@AEBVBlockPos@@0W4PistonState@@@Z");
        return (this->*rv)(std::forward<class BlockPos const&>(a0), std::forward<class BlockPos const&>(a1), std::forward<int \/*enum enum PistonState*\/>(a2));
    }
    inline int \/*enum enum EventResult*\/ onPistonActionEvent(struct PistonActionEvent const& a0){
        int \/*enum enum EventResult*\/ (BlockEventListener::*rv)(struct PistonActionEvent const&);
        *((void**)&rv) = dlsym("?onPistonActionEvent@BlockEventListener@@UEAA?AW4EventResult@@AEBUPistonActionEvent@@@Z");
        return (this->*rv)(std::forward<struct PistonActionEvent const&>(a0));
    }
    inline int \/*enum enum EventResult*\/ onBlockExploded(class BlockPos const& a0, class Block const& a1, class Actor* a2){
        int \/*enum enum EventResult*\/ (BlockEventListener::*rv)(class BlockPos const&, class Block const&, class Actor*);
        *((void**)&rv) = dlsym("?onBlockExploded@BlockEventListener@@UEAA?AW4EventResult@@AEBVBlockPos@@AEBVBlock@@PEAVActor@@@Z");
        return (this->*rv)(std::forward<class BlockPos const&>(a0), std::forward<class Block const&>(a1), std::forward<class Actor*>(a2));
    }
    inline int \/*enum enum EventResult*\/ onBlockDestroyedByPlayer(class Player& a0, std::string a1, class BlockPos const& a2){
        int \/*enum enum EventResult*\/ (BlockEventListener::*rv)(class Player&, std::string, class BlockPos const&);
        *((void**)&rv) = dlsym("?onBlockDestroyedByPlayer@BlockEventListener@@UEAA?AW4EventResult@@AEAVPlayer@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVBlockPos@@@Z");
        return (this->*rv)(std::forward<class Player&>(a0), std::forward<std::string>(a1), std::forward<class BlockPos const&>(a2));
    }
    */

protected:

private:
};