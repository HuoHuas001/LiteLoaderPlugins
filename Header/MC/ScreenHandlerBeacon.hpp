// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include "../Global.h"
#define EXTRA_INCLUDE_PART_SCREENHANDLERBEACON
#include "Extra/ScreenHandlerBeaconAPI.hpp"
#undef EXTRA_INCLUDE_PART_SCREENHANDLERBEACON
class ScreenHandlerBeacon {
#include "Extra/ScreenHandlerBeaconAPI.hpp"
public:
    /*0*/ virtual ~ScreenHandlerBeacon();
    /*1*/ virtual int /*enum enum ItemStackNetResult*/ handleAction(class ItemStackRequestAction const&);
    /*2*/ virtual int /*enum enum ItemStackNetResult*/ endRequest();
    /*3*/ virtual void __unk_vfn_0();
    /*4*/ virtual void postRequest(bool);
    /*
    inline int \/*enum enum ItemStackNetResult*\/ endRequest(){
        int \/*enum enum ItemStackNetResult*\/ (ScreenHandlerBeacon::*rv)();
        *((void**)&rv) = dlsym("?endRequest@ScreenHandlerBeacon@@MEAA?AW4ItemStackNetResult@@XZ");
        return (this->*rv)();
    }
    inline int \/*enum enum ItemStackNetResult*\/ handleAction(class ItemStackRequestAction const& a0){
        int \/*enum enum ItemStackNetResult*\/ (ScreenHandlerBeacon::*rv)(class ItemStackRequestAction const&);
        *((void**)&rv) = dlsym("?handleAction@ScreenHandlerBeacon@@MEAA?AW4ItemStackNetResult@@AEBVItemStackRequestAction@@@Z");
        return (this->*rv)(std::forward<class ItemStackRequestAction const&>(a0));
    }
    inline void postRequest(bool a0){
        void (ScreenHandlerBeacon::*rv)(bool);
        *((void**)&rv) = dlsym("?postRequest@ScreenHandlerBeacon@@MEAAX_N@Z");
        return (this->*rv)(std::forward<bool>(a0));
    }
    */

protected:

private:
    MCAPI enum ItemStackNetResult _handleBeaconPaymentAction(class ItemStackRequestActionBeaconPayment const&);
};