// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include "../Global.h"
#define EXTRA_INCLUDE_PART_SCRIPTSERVERACTOREVENTLISTENER
#include "Extra/ScriptServerActorEventListenerAPI.hpp"
#undef EXTRA_INCLUDE_PART_SCRIPTSERVERACTOREVENTLISTENER
class ScriptServerActorEventListener {
#include "Extra/ScriptServerActorEventListenerAPI.hpp"
public:
    /*0*/ virtual ~ScriptServerActorEventListener();
    /*1*/ virtual int /*enum enum EventResult*/ onActorAttack(class Actor&, class Actor&, int);
    /*2*/ virtual int /*enum enum EventResult*/ onActorHurt(struct ActorHurtEvent const&);
    /*3*/ virtual void __unk_vfn_0();
    /*4*/ virtual void __unk_vfn_1();
    /*5*/ virtual int /*enum enum EventResult*/ onActorTick(class Actor&);
    /*6*/ virtual int /*enum enum EventResult*/ onActorSneakChanged(class Actor&, bool);
    /*7*/ virtual int /*enum enum EventResult*/ onActorStartRiding(class Actor&, class Actor&);
    /*8*/ virtual int /*enum enum EventResult*/ onActorStopRiding(class Actor&, bool, bool, bool);
    /*9*/ virtual int /*enum enum EventResult*/ onActorDeath(class Actor&, class ActorDamageSource const&, int /*enum enum ActorType*/);
    /*10*/ virtual int /*enum enum EventResult*/ onActorDefinitionEventTriggered(struct ActorDefinitionEvent const&);
    /*11*/ virtual int /*enum enum EventResult*/ onActorUseItem(struct ActorUseItemEvent const&);
    /*12*/ virtual void __unk_vfn_2();
    /*13*/ virtual int /*enum enum EventResult*/ onActorCreated(class Actor&);
    /*14*/ virtual int /*enum enum EventResult*/ onProjectileHit(struct ProjectileHitEvent const&);
    /*15*/ virtual void __unk_vfn_3();
    /*16*/ virtual void __unk_vfn_4();
    /*17*/ virtual int /*enum enum EventResult*/ onActorAcquiredItem(struct ActorAcquiredItemEvent const&);
    /*18*/ virtual void __unk_vfn_5();
    /*19*/ virtual int /*enum enum EventResult*/ onActorDroppedItem(class Actor&, class ItemInstance const&);
    /*20*/ virtual int /*enum enum EventResult*/ onActorCarriedItemChanged(class Actor&, class ItemInstance const&, class ItemInstance const&, int /*enum enum HandSlot*/);
    /*21*/ virtual int /*enum enum EventResult*/ onActorEquippedArmor(class Actor&, class ItemInstance const&, int /*enum enum ArmorSlot*/);
    /*22*/ virtual int /*enum enum EventResult*/ onActorRemoved(struct ActorRemovedEvent const&);
    /*
    inline int \/*enum enum EventResult*\/ onActorMove(class Actor& a0, class Vec3 const& a1){
        int \/*enum enum EventResult*\/ (ScriptServerActorEventListener::*rv)(class Actor&, class Vec3 const&);
        *((void**)&rv) = dlsym("?onActorMove@ScriptServerActorEventListener@@UEAA?AW4EventResult@@AEAVActor@@AEBVVec3@@@Z");
        return (this->*rv)(std::forward<class Actor&>(a0), std::forward<class Vec3 const&>(a1));
    }
    inline int \/*enum enum EventResult*\/ onActorAcquiredItem(struct ActorAcquiredItemEvent const& a0){
        int \/*enum enum EventResult*\/ (ScriptServerActorEventListener::*rv)(struct ActorAcquiredItemEvent const&);
        *((void**)&rv) = dlsym("?onActorAcquiredItem@ScriptServerActorEventListener@@UEAA?AW4EventResult@@AEBUActorAcquiredItemEvent@@@Z");
        return (this->*rv)(std::forward<struct ActorAcquiredItemEvent const&>(a0));
    }
    inline int \/*enum enum EventResult*\/ onActorAttack(class Actor& a0, class Actor& a1, int a2){
        int \/*enum enum EventResult*\/ (ScriptServerActorEventListener::*rv)(class Actor&, class Actor&, int);
        *((void**)&rv) = dlsym("?onActorAttack@ScriptServerActorEventListener@@UEAA?AW4EventResult@@AEAVActor@@0H@Z");
        return (this->*rv)(std::forward<class Actor&>(a0), std::forward<class Actor&>(a1), std::forward<int>(a2));
    }
    inline int \/*enum enum EventResult*\/ onActorCarriedItemChanged(class Actor& a0, class ItemInstance const& a1, class ItemInstance const& a2, int \/*enum enum HandSlot*\/ a3){
        int \/*enum enum EventResult*\/ (ScriptServerActorEventListener::*rv)(class Actor&, class ItemInstance const&, class ItemInstance const&, int \/*enum enum HandSlot*\/);
        *((void**)&rv) = dlsym("?onActorCarriedItemChanged@ScriptServerActorEventListener@@UEAA?AW4EventResult@@AEAVActor@@AEBVItemInstance@@1W4HandSlot@@@Z");
        return (this->*rv)(std::forward<class Actor&>(a0), std::forward<class ItemInstance const&>(a1), std::forward<class ItemInstance const&>(a2), std::forward<int \/*enum enum HandSlot*\/>(a3));
    }
    inline int \/*enum enum EventResult*\/ onActorCreated(class Actor& a0){
        int \/*enum enum EventResult*\/ (ScriptServerActorEventListener::*rv)(class Actor&);
        *((void**)&rv) = dlsym("?onActorCreated@ScriptServerActorEventListener@@UEAA?AW4EventResult@@AEAVActor@@@Z");
        return (this->*rv)(std::forward<class Actor&>(a0));
    }
    inline int \/*enum enum EventResult*\/ onActorDeath(class Actor& a0, class ActorDamageSource const& a1, int \/*enum enum ActorType*\/ a2){
        int \/*enum enum EventResult*\/ (ScriptServerActorEventListener::*rv)(class Actor&, class ActorDamageSource const&, int \/*enum enum ActorType*\/);
        *((void**)&rv) = dlsym("?onActorDeath@ScriptServerActorEventListener@@UEAA?AW4EventResult@@AEAVActor@@AEBVActorDamageSource@@W4ActorType@@@Z");
        return (this->*rv)(std::forward<class Actor&>(a0), std::forward<class ActorDamageSource const&>(a1), std::forward<int \/*enum enum ActorType*\/>(a2));
    }
    inline int \/*enum enum EventResult*\/ onActorDefinitionEventTriggered(struct ActorDefinitionEvent const& a0){
        int \/*enum enum EventResult*\/ (ScriptServerActorEventListener::*rv)(struct ActorDefinitionEvent const&);
        *((void**)&rv) = dlsym("?onActorDefinitionEventTriggered@ScriptServerActorEventListener@@UEAA?AW4EventResult@@AEBUActorDefinitionEvent@@@Z");
        return (this->*rv)(std::forward<struct ActorDefinitionEvent const&>(a0));
    }
    inline int \/*enum enum EventResult*\/ onActorDroppedItem(class Actor& a0, class ItemInstance const& a1){
        int \/*enum enum EventResult*\/ (ScriptServerActorEventListener::*rv)(class Actor&, class ItemInstance const&);
        *((void**)&rv) = dlsym("?onActorDroppedItem@ScriptServerActorEventListener@@UEAA?AW4EventResult@@AEAVActor@@AEBVItemInstance@@@Z");
        return (this->*rv)(std::forward<class Actor&>(a0), std::forward<class ItemInstance const&>(a1));
    }
    inline int \/*enum enum EventResult*\/ onActorEquippedArmor(class Actor& a0, class ItemInstance const& a1, int \/*enum enum ArmorSlot*\/ a2){
        int \/*enum enum EventResult*\/ (ScriptServerActorEventListener::*rv)(class Actor&, class ItemInstance const&, int \/*enum enum ArmorSlot*\/);
        *((void**)&rv) = dlsym("?onActorEquippedArmor@ScriptServerActorEventListener@@UEAA?AW4EventResult@@AEAVActor@@AEBVItemInstance@@W4ArmorSlot@@@Z");
        return (this->*rv)(std::forward<class Actor&>(a0), std::forward<class ItemInstance const&>(a1), std::forward<int \/*enum enum ArmorSlot*\/>(a2));
    }
    inline int \/*enum enum EventResult*\/ onActorHurt(struct ActorHurtEvent const& a0){
        int \/*enum enum EventResult*\/ (ScriptServerActorEventListener::*rv)(struct ActorHurtEvent const&);
        *((void**)&rv) = dlsym("?onActorHurt@ScriptServerActorEventListener@@UEAA?AW4EventResult@@AEBUActorHurtEvent@@@Z");
        return (this->*rv)(std::forward<struct ActorHurtEvent const&>(a0));
    }
    inline int \/*enum enum EventResult*\/ onActorRemoved(struct ActorRemovedEvent const& a0){
        int \/*enum enum EventResult*\/ (ScriptServerActorEventListener::*rv)(struct ActorRemovedEvent const&);
        *((void**)&rv) = dlsym("?onActorRemoved@ScriptServerActorEventListener@@UEAA?AW4EventResult@@AEBUActorRemovedEvent@@@Z");
        return (this->*rv)(std::forward<struct ActorRemovedEvent const&>(a0));
    }
    inline int \/*enum enum EventResult*\/ onActorSneakChanged(class Actor& a0, bool a1){
        int \/*enum enum EventResult*\/ (ScriptServerActorEventListener::*rv)(class Actor&, bool);
        *((void**)&rv) = dlsym("?onActorSneakChanged@ScriptServerActorEventListener@@UEAA?AW4EventResult@@AEAVActor@@_N@Z");
        return (this->*rv)(std::forward<class Actor&>(a0), std::forward<bool>(a1));
    }
    inline int \/*enum enum EventResult*\/ onActorStartRiding(class Actor& a0, class Actor& a1){
        int \/*enum enum EventResult*\/ (ScriptServerActorEventListener::*rv)(class Actor&, class Actor&);
        *((void**)&rv) = dlsym("?onActorStartRiding@ScriptServerActorEventListener@@UEAA?AW4EventResult@@AEAVActor@@0@Z");
        return (this->*rv)(std::forward<class Actor&>(a0), std::forward<class Actor&>(a1));
    }
    inline int \/*enum enum EventResult*\/ onActorStopRiding(class Actor& a0, bool a1, bool a2, bool a3){
        int \/*enum enum EventResult*\/ (ScriptServerActorEventListener::*rv)(class Actor&, bool, bool, bool);
        *((void**)&rv) = dlsym("?onActorStopRiding@ScriptServerActorEventListener@@UEAA?AW4EventResult@@AEAVActor@@_N11@Z");
        return (this->*rv)(std::forward<class Actor&>(a0), std::forward<bool>(a1), std::forward<bool>(a2), std::forward<bool>(a3));
    }
    inline int \/*enum enum EventResult*\/ onActorTick(class Actor& a0){
        int \/*enum enum EventResult*\/ (ScriptServerActorEventListener::*rv)(class Actor&);
        *((void**)&rv) = dlsym("?onActorTick@ScriptServerActorEventListener@@UEAA?AW4EventResult@@AEAVActor@@@Z");
        return (this->*rv)(std::forward<class Actor&>(a0));
    }
    inline int \/*enum enum EventResult*\/ onActorUseItem(struct ActorUseItemEvent const& a0){
        int \/*enum enum EventResult*\/ (ScriptServerActorEventListener::*rv)(struct ActorUseItemEvent const&);
        *((void**)&rv) = dlsym("?onActorUseItem@ScriptServerActorEventListener@@UEAA?AW4EventResult@@AEBUActorUseItemEvent@@@Z");
        return (this->*rv)(std::forward<struct ActorUseItemEvent const&>(a0));
    }
    inline int \/*enum enum EventResult*\/ onProjectileHit(struct ProjectileHitEvent const& a0){
        int \/*enum enum EventResult*\/ (ScriptServerActorEventListener::*rv)(struct ProjectileHitEvent const&);
        *((void**)&rv) = dlsym("?onProjectileHit@ScriptServerActorEventListener@@UEAA?AW4EventResult@@AEBUProjectileHitEvent@@@Z");
        return (this->*rv)(std::forward<struct ProjectileHitEvent const&>(a0));
    }
    */

protected:

private:
};