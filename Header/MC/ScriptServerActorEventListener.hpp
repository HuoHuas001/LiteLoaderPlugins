// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include <Global.h>
#define EXTRA_INCLUDE_PART_SCRIPTSERVERACTOREVENTLISTENER
#include "Extra/ScriptServerActorEventListenerAPI.hpp"
#undef EXTRA_INCLUDE_PART_SCRIPTSERVERACTOREVENTLISTENER
class ScriptServerActorEventListener {
#include "Extra/ScriptServerActorEventListenerAPI.hpp"
public:
    /*0*/ virtual ~ScriptServerActorEventListener();
    /*1*/ virtual int /*enum EventResult*/ onActorAttack(class Actor&, class Actor&, int);
    /*2*/ virtual int /*enum EventResult*/ onActorHurt(struct ActorHurtEvent const&);
    /*3*/ virtual int /*enum EventResult*/ onActorMove(class Actor&, class Vec3 const&);
    /*4*/ virtual int /*enum EventResult*/ onActorMove(class Actor&, class Vec3 const&);
    /*5*/ virtual int /*enum EventResult*/ onActorTick(class Actor&);
    /*6*/ virtual int /*enum EventResult*/ onActorSneakChanged(class Actor&, bool);
    /*7*/ virtual int /*enum EventResult*/ onActorStartRiding(class Actor&, class Actor&);
    /*8*/ virtual int /*enum EventResult*/ onActorStopRiding(class Actor&, bool, bool, bool);
    /*9*/ virtual int /*enum EventResult*/ onActorDeath(class Actor&, class ActorDamageSource const&, int /*enum ActorType*/);
    /*10*/ virtual int /*enum EventResult*/ onActorDefinitionEventTriggered(struct ActorDefinitionEvent const&);
    /*11*/ virtual int /*enum EventResult*/ onActorUseItem(struct ActorUseItemEvent const&);
    /*12*/ virtual int /*enum EventResult*/ onActorMove(class Actor&, class Vec3 const&);
    /*13*/ virtual int /*enum EventResult*/ onActorCreated(class Actor&);
    /*14*/ virtual int /*enum EventResult*/ onProjectileHit(struct ProjectileHitEvent const&);
    /*15*/ virtual int /*enum EventResult*/ onActorMove(class Actor&, class Vec3 const&);
    /*16*/ virtual int /*enum EventResult*/ onActorMove(class Actor&, class Vec3 const&);
    /*17*/ virtual int /*enum EventResult*/ onActorAcquiredItem(struct ActorAcquiredItemEvent const&);
    /*18*/ virtual int /*enum EventResult*/ onActorMove(class Actor&, class Vec3 const&);
    /*19*/ virtual int /*enum EventResult*/ onActorDroppedItem(class Actor&, class ItemInstance const&);
    /*20*/ virtual int /*enum EventResult*/ onActorCarriedItemChanged(class Actor&, class ItemInstance const&, class ItemInstance const&, int /*enum HandSlot*/);
    /*21*/ virtual int /*enum EventResult*/ onActorEquippedArmor(class Actor&, class ItemInstance const&, int /*enum ArmorSlot*/);
    /*22*/ virtual int /*enum EventResult*/ onActorRemoved(struct ActorRemovedEvent const&);
    /*23*/ virtual int /*enum EventResult*/ onActorMove(class Actor&, class Vec3 const&);
    /*24*/ virtual int /*enum EventResult*/ onActorMove(class Actor&, class Vec3 const&);
    /*25*/ virtual int /*enum EventResult*/ onActorMove(class Actor&, class Vec3 const&);
    /*26*/ virtual int /*enum EventResult*/ onActorMove(class Actor&, class Vec3 const&);
    /*27*/ virtual int /*enum EventResult*/ onActorMove(class Actor&, class Vec3 const&);
    /*28*/ virtual int /*enum EventResult*/ onActorMove(class Actor&, class Vec3 const&);
    /*29*/ virtual int /*enum EventResult*/ onActorMove(class Actor&, class Vec3 const&);
    /*30*/ virtual int /*enum EventResult*/ onActorMove(class Actor&, class Vec3 const&);
    /*31*/ virtual int /*enum EventResult*/ onActorMove(class Actor&, class Vec3 const&);
};