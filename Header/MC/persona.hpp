// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include <Global.h>
#define EXTRA_INCLUDE_PART_PERSONA
#include "Extra/personaAPI.hpp"
#undef EXTRA_INCLUDE_PART_PERSONA
namespace persona {
#include "Extra/personaAPI.hpp"

MCAPI std::string const ANIMATED_128X128_NAME;
MCAPI std::string const ANIMATED_128X128_TEXTURE_CONTROLLER_FIRST_PERSON;
MCAPI std::string const ANIMATED_128X128_TEXTURE_CONTROLLER_THIRD_PERSON;
MCAPI class HashedString const ANIMATED_128X128_TEXTURE_FRAMES_VARIABLE;
MCAPI std::string const ANIMATED_32X32_NAME;
MCAPI std::string const ANIMATED_32X32_TEXTURE_CONTROLLER_FIRST_PERSON;
MCAPI std::string const ANIMATED_32X32_TEXTURE_CONTROLLER_THIRD_PERSON;
MCAPI class HashedString const ANIMATED_32X32_TEXTURE_FRAMES_VARIABLE;
MCAPI std::string const ANIMATED_FACE_CONTROLLER_FIRST_PERSON;
MCAPI std::string const ANIMATED_FACE_CONTROLLER_THIRD_PERSON;
MCAPI std::string const ANIMATED_FACE_NAME;
MCAPI class HashedString const ANIMATED_FACE_TEXTURE_FRAMES_VARIABLE;
MCAPI int const INVALID_INDEX;
MCAPI class mce::UUID const NONE_PIECE_ID;
MCAPI std::string const NONE_PIECE_PATH;
MCAPI class mce::UUID const NO_PIECE_SELECTED;
MCAPI class HashedString const USE_BLINKING_ANIMATION_VARIABLE;
MCAPI enum persona::PieceType pieceTypeFromString(std::string const&);
MCAPI std::string const& stringFromPieceType(enum persona::PieceType, bool);

} // namespace persona