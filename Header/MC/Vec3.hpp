// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include <Global.h>
#define EXTRA_INCLUDE_PART_VEC3
#include "Extra/Vec3API.hpp"
#undef EXTRA_INCLUDE_PART_VEC3
class Vec3 {
#include "Extra/Vec3API.hpp"

public:
    MCAPI class Vec3 abs() const;
    MCAPI class Vec3 ceil() const;
    MCAPI float distanceToLineSquared(class Vec3 const&, class Vec3 const&) const;
    MCAPI bool isNear(class Vec3 const&, float) const;
    MCAPI bool operator==(class Vec3 const&);
    MCAPI float distanceToSqr(class Vec3 const&) const;
    MCAPI class Vec3 floor(float) const;
    MCAPI bool isNan() const;
    MCAPI float maxComponent() const;
    MCAPI class Vec3 operator+(class Vec3 const&);
    MCAPI class Vec3 operator-(class Vec3 const&);
    MCAPI class Vec3 normalized() const;
    MCAPI std::string toString() const;
    MCAPI class Vec3 xz() const;

    MCAPI static class Vec3 const HALF;
    MCAPI static class Vec3 const MAX;
    MCAPI static class Vec3 const MIN;
    MCAPI static class Vec3 const NEG_UNIT_X;
    MCAPI static class Vec3 const NEG_UNIT_Y;
    MCAPI static class Vec3 const NEG_UNIT_Z;
    MCAPI static class Vec3 const ONE;
    MCAPI static class Vec3 const TWO;
    MCAPI static class Vec3 const UNIT_X;
    MCAPI static class Vec3 const UNIT_Y;
    MCAPI static class Vec3 const UNIT_Z;
    MCAPI static class Vec3 const ZERO;
    MCAPI static class Vec3 clamp(class Vec3 const&, class Vec3 const&, class Vec3 const&);
    MCAPI static class Vec3 directionFromRotation(class Vec2 const&);
    MCAPI static class Vec2 rotationFromDirection(class Vec3 const&);
};