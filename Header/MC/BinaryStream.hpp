// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include "../Global.h"
#include "ReadOnlyBinaryStream.hpp"
#define EXTRA_INCLUDE_PART_BINARYSTREAM
#include "Extra/BinaryStreamAPI.hpp"
#undef EXTRA_INCLUDE_PART_BINARYSTREAM
class BinaryStream : public ReadOnlyBinaryStream {
#include "Extra/BinaryStreamAPI.hpp"
public:
    /*0*/ virtual ~BinaryStream();

    MCAPI std::string getAndReleaseData();
    MCAPI void reset();
    MCAPI void writeBool(bool);
    MCAPI void writeByte(unsigned char);
    MCAPI void writeDouble(double);
    MCAPI void writeFloat(float);
    MCAPI void writeSignedBigEndianInt(int);
    MCAPI void writeSignedInt(int);
    MCAPI void writeSignedInt64(__int64);
    MCAPI void writeSignedShort(short);
    MCAPI void writeString(class gsl::basic_string_span<char const, -1>);
    MCAPI void writeUnsignedChar(unsigned char);
    MCAPI void writeUnsignedInt(unsigned int);
    MCAPI void writeUnsignedInt64(unsigned __int64);
    MCAPI void writeUnsignedShort(unsigned short);
    MCAPI void writeUnsignedVarInt(unsigned int);
    MCAPI void writeUnsignedVarInt64(unsigned __int64);
    MCAPI void writeVarInt(int);
    MCAPI void writeVarInt64(__int64);

protected:

private:
    MCAPI void write(void const*, unsigned __int64);
};