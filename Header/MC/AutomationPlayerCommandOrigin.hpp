// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include "../Global.h"
#include "PlayerCommandOrigin.hpp"
#include "Json.hpp"
#define EXTRA_INCLUDE_PART_AUTOMATIONPLAYERCOMMANDORIGIN
#include "Extra/AutomationPlayerCommandOriginAPI.hpp"
#undef EXTRA_INCLUDE_PART_AUTOMATIONPLAYERCOMMANDORIGIN
class AutomationPlayerCommandOrigin : public PlayerCommandOrigin {
#include "Extra/AutomationPlayerCommandOriginAPI.hpp"
public:
    /*0*/ virtual ~AutomationPlayerCommandOrigin();
    /*1*/ virtual std::string const& getRequestId() const;
    /*2*/ virtual std::string getName() const;
    /*3*/ virtual class Level* getLevel() const;
    /*4*/ virtual int /*enum enum CommandPermissionLevel*/ getPermissionsLevel() const;
    /*5*/ virtual std::unique_ptr<class CommandOrigin> clone() const;
    /*6*/ virtual bool hasChatPerms() const;
    /*7*/ virtual bool hasTellPerms() const;
    /*8*/ virtual bool canUseCommandsWithoutCheatsEnabled() const;
    /*9*/ virtual bool isSelectorExpansionAllowed() const;
    /*10*/ virtual class NetworkIdentifier const& getSourceId() const;
    /*11*/ virtual void __unk_vfn_0();
    /*12*/ virtual void __unk_vfn_1();
    /*13*/ virtual struct CommandOriginData toCommandOriginData() const;
    /*14*/ virtual void __unk_vfn_2();
    /*15*/ virtual void handleCommandOutputCallback(class Json::Value&&) const;
    /*16*/ virtual class CompoundTag serialize() const;
    /*17*/ virtual bool isValid() const;
    /*
    inline bool hasChatPerms() const{
        bool (AutomationPlayerCommandOrigin::*rv)() const;
        *((void**)&rv) = dlsym("?hasChatPerms@AutomationPlayerCommandOrigin@@UEBA_NXZ");
        return (this->*rv)();
    }
    inline bool hasTellPerms() const{
        bool (AutomationPlayerCommandOrigin::*rv)() const;
        *((void**)&rv) = dlsym("?hasTellPerms@AutomationPlayerCommandOrigin@@UEBA_NXZ");
        return (this->*rv)();
    }
    inline int \/*enum enum CommandOriginType*\/ getOriginType() const{
        int \/*enum enum CommandOriginType*\/ (AutomationPlayerCommandOrigin::*rv)() const;
        *((void**)&rv) = dlsym("?getOriginType@AutomationPlayerCommandOrigin@@UEBA?AW4CommandOriginType@@XZ");
        return (this->*rv)();
    }
    inline std::string const& getRequestId() const{
        std::string const& (AutomationPlayerCommandOrigin::*rv)() const;
        *((void**)&rv) = dlsym("?getRequestId@AutomationPlayerCommandOrigin@@UEBAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ");
        return (this->*rv)();
    }
    inline class NetworkIdentifier const& getSourceId() const{
        class NetworkIdentifier const& (AutomationPlayerCommandOrigin::*rv)() const;
        *((void**)&rv) = dlsym("?getSourceId@AutomationPlayerCommandOrigin@@UEBAAEBVNetworkIdentifier@@XZ");
        return (this->*rv)();
    }
    inline std::unique_ptr<class CommandOrigin> clone() const{
        std::unique_ptr<class CommandOrigin> (AutomationPlayerCommandOrigin::*rv)() const;
        *((void**)&rv) = dlsym("?clone@AutomationPlayerCommandOrigin@@UEBA?AV?$unique_ptr@VCommandOrigin@@U?$default_delete@VCommandOrigin@@@std@@@std@@XZ");
        return (this->*rv)();
    }
    inline std::string getName() const{
        std::string (AutomationPlayerCommandOrigin::*rv)() const;
        *((void**)&rv) = dlsym("?getName@AutomationPlayerCommandOrigin@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ");
        return (this->*rv)();
    }
    inline int \/*enum enum CommandPermissionLevel*\/ getPermissionsLevel() const{
        int \/*enum enum CommandPermissionLevel*\/ (AutomationPlayerCommandOrigin::*rv)() const;
        *((void**)&rv) = dlsym("?getPermissionsLevel@AutomationPlayerCommandOrigin@@UEBA?AW4CommandPermissionLevel@@XZ");
        return (this->*rv)();
    }
    inline bool isValid() const{
        bool (AutomationPlayerCommandOrigin::*rv)() const;
        *((void**)&rv) = dlsym("?isValid@AutomationPlayerCommandOrigin@@UEBA_NXZ");
        return (this->*rv)();
    }
    inline class CompoundTag serialize() const{
        class CompoundTag (AutomationPlayerCommandOrigin::*rv)() const;
        *((void**)&rv) = dlsym("?serialize@AutomationPlayerCommandOrigin@@UEBA?AVCompoundTag@@XZ");
        return (this->*rv)();
    }
    inline struct CommandOriginData toCommandOriginData() const{
        struct CommandOriginData (AutomationPlayerCommandOrigin::*rv)() const;
        *((void**)&rv) = dlsym("?toCommandOriginData@AutomationPlayerCommandOrigin@@UEBA?AUCommandOriginData@@XZ");
        return (this->*rv)();
    }
    */

protected:

private:
};