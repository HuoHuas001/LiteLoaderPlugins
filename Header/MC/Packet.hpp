// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include "../Global.h"
#define EXTRA_INCLUDE_PART_PACKET
#include "Extra/PacketAPI.hpp"
#undef EXTRA_INCLUDE_PART_PACKET
class Packet {
#include "Extra/PacketAPI.hpp"
public:
    /*0*/ virtual ~Packet();
    /*1*/ virtual int /*enum enum MinecraftPacketIds*/ getId() const = 0;
    /*2*/ virtual std::string getName() const = 0;
    /*3*/ virtual void write(class BinaryStream&) const = 0;
    /*4*/ virtual struct ExtendedStreamReadResult readExtended(class ReadOnlyBinaryStream&);
    /*5*/ virtual bool disallowBatching() const;
    /*6*/ virtual int /*enum enum StreamReadResult*/ _read(class ReadOnlyBinaryStream&) = 0;
    /*
    inline bool disallowBatching() const{
        bool (Packet::*rv)() const;
        *((void**)&rv) = dlsym("?disallowBatching@Packet@@UEBA_NXZ");
        return (this->*rv)();
    }
    inline struct ExtendedStreamReadResult readExtended(class ReadOnlyBinaryStream& a0){
        struct ExtendedStreamReadResult (Packet::*rv)(class ReadOnlyBinaryStream&);
        *((void**)&rv) = dlsym("?readExtended@Packet@@UEAA?AUExtendedStreamReadResult@@AEAVReadOnlyBinaryStream@@@Z");
        return (this->*rv)(std::forward<class ReadOnlyBinaryStream&>(a0));
    }
    */

protected:

private:
};