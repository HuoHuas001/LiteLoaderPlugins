// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include "../Global.h"
#define EXTRA_INCLUDE_PART_SERIALIZERTRAITS
#include "Extra/SerializerTraitsAPI.hpp"
#undef EXTRA_INCLUDE_PART_SERIALIZERTRAITS
struct SerializerTraits {
#include "Extra/SerializerTraitsAPI.hpp"
public:
    MCAPI struct SerializerTraits& arrayLengthConstraint(unsigned __int64, unsigned __int64);
    MCAPI struct SerializerTraits& enumMapper(class SerializerEnumMapping const*);
    MCAPI struct SerializerTraits& factory(class entt::meta_any (*)(std::string const&), class entt::meta_any (*)(std::string const&, void*));
    MCAPI bool isMaxConstraintSet() const;
    MCAPI bool isMinConstraintSet() const;
    MCAPI struct SerializerTraits& memberName(std::string const&);
    MCAPI struct SerializerTraits& operator=(struct SerializerTraits&&);
    MCAPI struct SerializerTraits& primary();
    MCAPI struct SerializerTraits& required();
    MCAPI struct SerializerTraits& validate(class std::function<bool (class entt::meta_any&, class SerializerContext&)>);
    MCAPI static char const* const const kAttributesTraits;

protected:

private:
    MCAPI unsigned __int64 getEnumSize() const;
    MCAPI bool isEnum() const;
    MCAPI bool performValidation(class entt::meta_any&, class SerializerContext&) const;
    MCAPI bool remapEnum(std::string const&, unsigned int&) const;
    MCAPI bool remapEnum(int, std::string&) const;
};