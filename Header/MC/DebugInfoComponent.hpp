// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include "../Global.h"
#define EXTRA_INCLUDE_PART_DEBUGINFOCOMPONENT
#include "Extra/DebugInfoComponentAPI.hpp"
#undef EXTRA_INCLUDE_PART_DEBUGINFOCOMPONENT
class DebugInfoComponent {
#include "Extra/DebugInfoComponentAPI.hpp"
public:
    /*0*/ virtual ~DebugInfoComponent();
    /*1*/ virtual void __unk_vfn_0();
    /*2*/ virtual void __unk_vfn_1();
    /*3*/ virtual void __unk_vfn_2();
    /*4*/ virtual void __unk_vfn_3();
    /*5*/ virtual void __unk_vfn_4();
    /*6*/ virtual void __unk_vfn_5();
    /*7*/ virtual void __unk_vfn_6();
    /*8*/ virtual void __unk_vfn_7();
    /*9*/ virtual void __unk_vfn_8();
    /*10*/ virtual int /*enum enum EventResult*/ onActorDefinitionEventTriggered(struct ActorDefinitionEvent const&);
    /*
    inline int \/*enum enum EventResult*\/ onActorDefinitionEventTriggered(struct ActorDefinitionEvent const& a0){
        int \/*enum enum EventResult*\/ (DebugInfoComponent::*rv)(struct ActorDefinitionEvent const&);
        *((void**)&rv) = dlsym("?onActorDefinitionEventTriggered@DebugInfoComponent@@UEAA?AW4EventResult@@AEBUActorDefinitionEvent@@@Z");
        return (this->*rv)(std::forward<struct ActorDefinitionEvent const&>(a0));
    }
    */
    MCAPI void addListener(class HashedString const&, class NetworkIdentifier, unsigned char);
    MCAPI bool listenersEmpty() const;
    MCAPI class DebugInfoComponent& operator=(class DebugInfoComponent&&);
    MCAPI void removeListener(class HashedString const&, class NetworkIdentifier, unsigned char);

protected:

private:
};