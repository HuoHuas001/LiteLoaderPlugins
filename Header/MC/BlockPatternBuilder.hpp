// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include "../Global.h"
#define EXTRA_INCLUDE_PART_BLOCKPATTERNBUILDER
#include "Extra/BlockPatternBuilderAPI.hpp"
#undef EXTRA_INCLUDE_PART_BLOCKPATTERNBUILDER
class BlockPatternBuilder {
#include "Extra/BlockPatternBuilderAPI.hpp"
public:
    MCAPI class BlockPatternBuilder& aisle(int, ...);
    MCAPI class BlockPatternBuilder& build();
    MCAPI class BlockPatternBuilder& define(char, class Block const&);
    MCAPI class BlockPatternBuilder& define(char, class std::function<bool (class BlockSource&, class BlockPos const&, class Block const&)>);
    MCAPI bool isReadyForMatch();
    MCAPI struct BuildMatch match(class BlockPos const&);
    MCAPI struct BuildMatch match(class BlockPos const&, int, int);
    MCAPI struct BuildMatch match(class BlockPos const&, int, int, unsigned char, unsigned char);
    MCAPI void replaceBlocks(char, struct BuildMatch, class Block const&, bool);
    MCAPI static std::unique_ptr<class BlockPatternBuilder> start(class BlockSource&);

protected:

private:
    MCAPI bool _fitsBlockPatternEntry(int, int, class BlockPos const&, class Block const&);
};