// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include "../Global.h"
#define EXTRA_INCLUDE_PART_WEBVIEWOBSERVER
#include "Extra/WebviewObserverAPI.hpp"
#undef EXTRA_INCLUDE_PART_WEBVIEWOBSERVER
class WebviewObserver {
#include "Extra/WebviewObserverAPI.hpp"
public:
    /*0*/ virtual ~WebviewObserver();
    /*
    inline void onDownloadBegin(struct WebviewDownloadInfo const& a0){
        void (WebviewObserver::*rv)(struct WebviewDownloadInfo const&);
        *((void**)&rv) = dlsym("?onDownloadBegin@WebviewObserver@@UEAAXAEBUWebviewDownloadInfo@@@Z");
        return (this->*rv)(std::forward<struct WebviewDownloadInfo const&>(a0));
    }
    inline void onError(struct WebviewError const& a0){
        void (WebviewObserver::*rv)(struct WebviewError const&);
        *((void**)&rv) = dlsym("?onError@WebviewObserver@@UEAAXAEBUWebviewError@@@Z");
        return (this->*rv)(std::forward<struct WebviewError const&>(a0));
    }
    inline void onMessageRecieved(std::string const& a0){
        void (WebviewObserver::*rv)(std::string const&);
        *((void**)&rv) = dlsym("?onMessageRecieved@WebviewObserver@@UEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z");
        return (this->*rv)(std::forward<std::string const&>(a0));
    }
    inline void onDownloadUpdate(struct WebviewDownloadInfo const& a0){
        void (WebviewObserver::*rv)(struct WebviewDownloadInfo const&);
        *((void**)&rv) = dlsym("?onDownloadUpdate@WebviewObserver@@UEAAXAEBUWebviewDownloadInfo@@@Z");
        return (this->*rv)(std::forward<struct WebviewDownloadInfo const&>(a0));
    }
    inline void onDownloadCanceled(struct WebviewDownloadInfo const& a0){
        void (WebviewObserver::*rv)(struct WebviewDownloadInfo const&);
        *((void**)&rv) = dlsym("?onDownloadCanceled@WebviewObserver@@UEAAXAEBUWebviewDownloadInfo@@@Z");
        return (this->*rv)(std::forward<struct WebviewDownloadInfo const&>(a0));
    }
    inline void onDownloadComplete(struct WebviewDownloadInfo const& a0){
        void (WebviewObserver::*rv)(struct WebviewDownloadInfo const&);
        *((void**)&rv) = dlsym("?onDownloadComplete@WebviewObserver@@UEAAXAEBUWebviewDownloadInfo@@@Z");
        return (this->*rv)(std::forward<struct WebviewDownloadInfo const&>(a0));
    }
    inline void onLoadingEnd(){
        void (WebviewObserver::*rv)();
        *((void**)&rv) = dlsym("?onLoadingEnd@WebviewObserver@@UEAAXXZ");
        return (this->*rv)();
    }
    inline void onLoadingBegin(){
        void (WebviewObserver::*rv)();
        *((void**)&rv) = dlsym("?onLoadingBegin@WebviewObserver@@UEAAXXZ");
        return (this->*rv)();
    }
    */

protected:

private:
};