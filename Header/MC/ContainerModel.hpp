// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include <Global.h>
#define EXTRA_INCLUDE_PART_CONTAINERMODEL
#include "Extra/ContainerModelAPI.hpp"
#undef EXTRA_INCLUDE_PART_CONTAINERMODEL
class ContainerModel {
#include "Extra/ContainerModelAPI.hpp"
public:
    /*0*/ virtual void containerContentChanged(int);
    /*1*/ virtual ~ContainerModel();
    /*2*/ virtual void postInit();
    /*3*/ virtual void releaseResources();
    /*4*/ virtual int getContainerSize() const;
    /*5*/ virtual int getFilteredContainerSize() const;
    /*6*/ virtual void unk_vfn_6();
    /*7*/ virtual class ContainerWeakRef getContainerWeakRef() const;
    /*8*/ virtual class ItemStack const& getItemStack(int) const;
    /*9*/ virtual std::vector<class ItemStack> const& getItems() const;
    /*10*/ virtual class ItemInstance const& getItemInstance(int) const;
    /*11*/ virtual class ItemStackBase const& getItemStackBase(int) const;
    /*12*/ virtual void unk_vfn_12();
    /*13*/ virtual void setItem(int, class ItemStack const&);
    /*14*/ virtual bool isValid();
    /*15*/ virtual void unk_vfn_15();
    /*16*/ virtual void unk_vfn_16();
    /*17*/ virtual void unk_vfn_17();
    /*18*/ virtual std::string const& getItemGroupName(int) const;
    /*19*/ virtual void unk_vfn_19();
    /*20*/ virtual class Container* _getContainer() const;
    /*21*/ virtual int _getContainerOffset() const;
    /*22*/ virtual void _onItemChanged(int, class ItemStack const&, class ItemStack const&);

public:
    MCAPI bool isContainerSlotInRange(int) const;
    MCAPI void networkUpdateItem(int, class ItemStack const&, class ItemStack const&);
    MCAPI void registerOnContainerChangedCallback(class std::function<void(int, class ItemStack const&, class ItemStack const&)>);
    MCAPI void registerPlayerNotificationCallback(class std::function<void(int, class ItemStack const&, class ItemStack const&)>);

private:
    MCAPI void _onClientUIItemNetworkChanged(int, class ItemStack const&, class ItemStack const&);

protected:
    MCAPI void _init();
};