// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include <Global.h>
#include "ConsumerComponent.hpp"
#define EXTRA_INCLUDE_PART_PISTONCONSUMER
#include "Extra/PistonConsumerAPI.hpp"
#undef EXTRA_INCLUDE_PART_PISTONCONSUMER
class PistonConsumer : public ConsumerComponent {
#include "Extra/PistonConsumerAPI.hpp"
public:
    /*0*/ virtual ~PistonConsumer();
    /*1*/ virtual int getStrength() const;
    /*2*/ virtual int getDirection() const;
    /*3*/ virtual void setStrength(int);
    /*4*/ virtual void setDirection(unsigned char);
    /*6*/ virtual bool canConsumePowerAnyDirection() const;
    /*7*/ virtual void unk_vfn_7();
    /*8*/ virtual bool canStopPower() const;
    /*9*/ virtual void setStopPower(bool);
    /*11*/ virtual bool addSource(class CircuitSceneGraph&, class CircuitTrackingInfo const&, int&, bool&);
    /*12*/ virtual bool allowConnection(class CircuitSceneGraph&, class CircuitTrackingInfo const&, bool&);
    /*13*/ virtual void checkLock(class CircuitSystem&, class BlockPos const&);
    /*15*/ virtual void cacheValues(class CircuitSystem&, class BlockPos const&);
    /*16*/ virtual void updateDependencies(class CircuitSceneGraph&, class BlockPos const&);
    /*17*/ virtual void unk_vfn_17();
    /*18*/ virtual bool isHalfPulse() const;
    /*20*/ virtual void unk_vfn_20();
    /*21*/ virtual bool isSecondaryPowered() const;
    /*22*/ virtual int /*enum CircuitComponentType*/ getCircuitComponentType() const;

public:
    MCAPI void setBlockPowerFace(unsigned char);
};