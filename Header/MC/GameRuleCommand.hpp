// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include "../Global.h"
#include "Json.hpp"
#define EXTRA_INCLUDE_PART_GAMERULECOMMAND
#include "Extra/GameRuleCommandAPI.hpp"
#undef EXTRA_INCLUDE_PART_GAMERULECOMMAND
class GameRuleCommand {
#include "Extra/GameRuleCommandAPI.hpp"
public:
    /*0*/ virtual ~GameRuleCommand();
    /*1*/ virtual void execute(class CommandOrigin const&, class CommandOutput&) const;
    /*
    inline void execute(class CommandOrigin const& a0, class CommandOutput& a1) const{
        void (GameRuleCommand::*rv)(class CommandOrigin const&, class CommandOutput&) const;
        *((void**)&rv) = dlsym("?execute@GameRuleCommand@@UEBAXAEBVCommandOrigin@@AEAVCommandOutput@@@Z");
        return (this->*rv)(std::forward<class CommandOrigin const&>(a0), std::forward<class CommandOutput&>(a1));
    }
    */
    MCAPI static void setup(class CommandRegistry&, struct GameRuleCommand::InitProxy&&);

protected:

private:
    MCAPI void getGameRule(class CommandOrigin const&, class CommandOutput&) const;
    MCAPI void setGameRule(class CommandOrigin const&, class CommandOutput&) const;
    MCAPI static void createJsonIndex(std::string const&, class GameRule const&, class Json::Value&, std::string*);
};