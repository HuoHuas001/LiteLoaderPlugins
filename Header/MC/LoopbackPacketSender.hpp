// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include <Global.h>
#define EXTRA_INCLUDE_PART_LOOPBACKPACKETSENDER
#include "Extra/LoopbackPacketSenderAPI.hpp"
#undef EXTRA_INCLUDE_PART_LOOPBACKPACKETSENDER
class LoopbackPacketSender {
#include "Extra/LoopbackPacketSenderAPI.hpp"
public:
    /*0*/ virtual ~LoopbackPacketSender();
    /*1*/ virtual void send(class Packet&);
    /*2*/ virtual void sendToServer(class Packet&);
    /*3*/ virtual void sendToClient(class UserEntityIdentifierComponent const*, class Packet const&);
    /*4*/ virtual void sendToClient(class NetworkIdentifier const&, class Packet const&, unsigned char);
    /*5*/ virtual void sendToClients(std::vector<struct NetworkIdentifierWithSubId> const&, class Packet const&);
    /*6*/ virtual void sendBroadcast(class Packet const&);
    /*7*/ virtual void sendBroadcast(class NetworkIdentifier const&, unsigned char, class Packet const&);
    /*8*/ virtual void flush(class NetworkIdentifier const&, class std::function<void(void)>&&);

public:
    MCAPI void addLoopbackCallback(class NetEventCallback&);
    MCAPI void removeLoopbackCallback(class NetEventCallback&);
    MCAPI void setUserList(std::vector<class OwnerPtrT<struct EntityRefTraits>> const*);
};