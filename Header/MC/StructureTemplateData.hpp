// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include <Global.h>
#define EXTRA_INCLUDE_PART_STRUCTURETEMPLATEDATA
#include "Extra/StructureTemplateDataAPI.hpp"
#undef EXTRA_INCLUDE_PART_STRUCTURETEMPLATEDATA
class StructureTemplateData {
#include "Extra/StructureTemplateDataAPI.hpp"
public:
    /*0*/ virtual ~StructureTemplateData();

public:
    MCAPI class StructureBlockPalette const* getPalette(std::string const&) const;
    MCAPI bool load(class CompoundTag const&);
    MCAPI std::unique_ptr<class CompoundTag> save() const;

    MCAPI static std::string const DEFAULT_PALETTE_NAME;

private:
    MCAPI void _contentErrorMissingField(std::string const&) const;

protected:
    MCAPI enum StructureLoadResult _parseBlockIndices(class CompoundTag const&);
    MCAPI enum StructureLoadResult _parseEntities(class CompoundTag const&);
    MCAPI enum StructureLoadResult _parseFormatVersion(class CompoundTag const&);
    MCAPI enum StructureLoadResult _parsePalettes(class CompoundTag const&);
    MCAPI enum StructureLoadResult _parseSize(class CompoundTag const&);
    MCAPI void _saveBlockIndices(class CompoundTag&) const;
    MCAPI void _savePalettes(class CompoundTag&) const;
    MCAPI void _saveStructureTag(class CompoundTag&) const;
};