// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include <Global.h>
#include "Feature.hpp"
#define EXTRA_INCLUDE_PART_CORALFEATURE
#include "Extra/CoralFeatureAPI.hpp"
#undef EXTRA_INCLUDE_PART_CORALFEATURE
class CoralFeature : public Feature {
#include "Extra/CoralFeatureAPI.hpp"
public:
    /*0*/ virtual ~CoralFeature();
    /*2*/ virtual void unk_vfn_2();
    /*3*/ virtual bool place(class BlockSource&, class BlockPos const&, class Random&) const;

private:
    MCAPI void _buildHand(class BlockSource&, class BlockPos const&, class Random&, std::vector<class BlockPos>&, std::vector<struct std::pair<class BlockPos, unsigned char>>&, class gsl::not_null<class Block const*>) const;
    MCAPI void _buildPlantArm(class BlockSource&, class Random&, class BlockPos const&, class gsl::not_null<class Block const*>, std::vector<class BlockPos>&, std::vector<struct std::pair<class BlockPos, unsigned char>>&, unsigned char, bool) const;
    MCAPI void _buildPlantLike(class BlockSource&, class BlockPos const&, class Random&, std::vector<class BlockPos>&, std::vector<struct std::pair<class BlockPos, unsigned char>>&, class gsl::not_null<class Block const*>) const;
    MCAPI void _buildSmallClump(class BlockSource&, class BlockPos const&, class Random&, std::vector<class BlockPos>&, std::vector<struct std::pair<class BlockPos, unsigned char>>&, class gsl::not_null<class Block const*>) const;
    MCAPI void _buildSpire(class BlockSource&, class BlockPos const&, class Random&, std::vector<class BlockPos>&, std::vector<struct std::pair<class BlockPos, unsigned char>>&, class gsl::not_null<class Block const*>) const;
    MCAPI void _placeCoral(class BlockSource&, class BlockPos const&, class Random&, std::vector<class BlockPos>&, std::vector<struct std::pair<class BlockPos, unsigned char>>&, int) const;
    MCAPI void _placeSideDecorations(class BlockSource&, class BlockPos const&, class Random&, unsigned char) const;
    MCAPI unsigned char _randomDirectionExcept(class Random&, unsigned char) const;
    MCAPI bool _setBlock(class BlockSource&, class BlockPos const&, class gsl::not_null<class Block const*>, int) const;
    MCAPI bool _setBlockOnSolid(class BlockSource&, class BlockPos const&, class gsl::not_null<class Block const*>, int) const;
    MCAPI void _starCorners(class BlockSource&, class Random&, class BlockPos const&, class gsl::not_null<class Block const*>, float, int, bool) const;
    MCAPI void _starFormation(class BlockSource&, class Random&, class BlockPos const&, class gsl::not_null<class Block const*>, float, int, bool) const;
};