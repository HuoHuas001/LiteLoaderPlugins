// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include <Global.h>
#include "ScriptApi.hpp"
#define EXTRA_INCLUDE_PART_SCRIPTEVENTDATA
#include "Extra/ScriptEventDataAPI.hpp"
#undef EXTRA_INCLUDE_PART_SCRIPTEVENTDATA
struct ScriptEventData : public ScriptEngine {
#include "Extra/ScriptEventDataAPI.hpp"
public:
    /*0*/ virtual ~ScriptEventData();
    /*1*/ virtual void unk_vfn_1();
    /*2*/ virtual void unk_vfn_2();
    /*9*/ virtual void unk_vfn_9();
    /*10*/ virtual void unk_vfn_10();
    /*11*/ virtual void unk_vfn_11();
    /*12*/ virtual void unk_vfn_12();
    /*13*/ virtual void unk_vfn_13();
    /*14*/ virtual void unk_vfn_14();
    /*15*/ virtual void unk_vfn_15();
    /*16*/ virtual void unk_vfn_16();
    /*17*/ virtual void unk_vfn_17();
    /*18*/ virtual void unk_vfn_18();
    /*19*/ virtual void unk_vfn_19();
    /*20*/ virtual void unk_vfn_20();
    /*21*/ virtual void unk_vfn_21();
    /*22*/ virtual void unk_vfn_22();
    /*23*/ virtual void unk_vfn_23();
    /*24*/ virtual void unk_vfn_24();
    /*25*/ virtual void unk_vfn_25();
    /*26*/ virtual void unk_vfn_26();
    /*27*/ virtual void unk_vfn_27();
    /*28*/ virtual void unk_vfn_28();
    /*29*/ virtual void unk_vfn_29();
    /*30*/ virtual void unk_vfn_30();
    /*31*/ virtual void unk_vfn_31();
    /*32*/ virtual void unk_vfn_32();
    /*33*/ virtual void unk_vfn_33();
    /*34*/ virtual void unk_vfn_34();
    /*35*/ virtual void unk_vfn_35();
    /*36*/ virtual void unk_vfn_36();
    /*37*/ virtual void unk_vfn_37();
    /*38*/ virtual void unk_vfn_38();
    /*39*/ virtual void unk_vfn_39();
    /*40*/ virtual void unk_vfn_40();
    /*41*/ virtual void unk_vfn_41();
    /*42*/ virtual void unk_vfn_42();
    /*43*/ virtual void unk_vfn_43();
    /*44*/ virtual void unk_vfn_44();
    /*45*/ virtual void unk_vfn_45();
    /*46*/ virtual void unk_vfn_46();
    /*47*/ virtual void unk_vfn_47();
    /*48*/ virtual void unk_vfn_48();
    /*49*/ virtual void unk_vfn_49();
    /*50*/ virtual void unk_vfn_50();
    /*51*/ virtual void unk_vfn_51();

public:
    MCAPI std::string const getName() const;
    MCAPI bool serialize(class ScriptEngine&, class EventInfo&, class ScriptApi::ScriptObjectHandle&) const;
};