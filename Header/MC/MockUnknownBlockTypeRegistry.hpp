// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include "../Global.h"
#define EXTRA_INCLUDE_PART_MOCKUNKNOWNBLOCKTYPEREGISTRY
#include "Extra/MockUnknownBlockTypeRegistryAPI.hpp"
#undef EXTRA_INCLUDE_PART_MOCKUNKNOWNBLOCKTYPEREGISTRY
class MockUnknownBlockTypeRegistry {
#include "Extra/MockUnknownBlockTypeRegistryAPI.hpp"
public:
    /*0*/ virtual ~MockUnknownBlockTypeRegistry();
    /*1*/ virtual class Block const& getUnknownBlock(class CompoundTag const&);
    /*
    inline class Block const& getUnknownBlock(class CompoundTag const& a0){
        class Block const& (MockUnknownBlockTypeRegistry::*rv)(class CompoundTag const&);
        *((void**)&rv) = dlsym("?getUnknownBlock@MockUnknownBlockTypeRegistry@@UEAAAEBVBlock@@AEBVCompoundTag@@@Z");
        return (this->*rv)(std::forward<class CompoundTag const&>(a0));
    }
    */

protected:

private:
};