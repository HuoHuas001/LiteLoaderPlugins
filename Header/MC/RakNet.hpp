// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include "../Global.h"
#define EXTRA_INCLUDE_PART_RAKNET
#include "Extra/RakNetAPI.hpp"
#undef EXTRA_INCLUDE_PART_RAKNET
namespace RakNet {
#include "Extra/RakNetAPI.hpp"
    MCAPI unsigned int ConnectionAttemptLoop(void*);
    MCAPI unsigned __int64 GetTime();
    MCAPI unsigned int GetTimeMS();
    MCAPI unsigned __int64 GetTimeUS();
    MCAPI bool NonNumericHostString(char const*);
    MCAPI void ProcessNetworkPacket(struct RakNet::SystemAddress, char const*, int, class RakNet::RakPeer*, class RakNet::RakNetSocket2*, unsigned __int64, class RakNet::BitStream&);
    MCAPI bool ProcessOfflineNetworkPacket(struct RakNet::SystemAddress, char const*, int, class RakNet::RakPeer*, class RakNet::RakNetSocket2*, bool*, unsigned __int64);
    MCAPI int SplitPacketChannelComp(unsigned short const&, struct RakNet::SplitPacketChannel* const&);
    MCAPI extern struct RakNet::RakNetGUID const UNASSIGNED_RAKNET_GUID;
    MCAPI extern struct RakNet::SystemAddress const UNASSIGNED_SYSTEM_ADDRESS;
    MCAPI unsigned int UpdateNetworkLoop(void*);
    MCAPI unsigned int UpdateTCPInterfaceLoop(void*);
    MCAPI void* _DLMallocDirectMMap(unsigned __int64);
    MCAPI void* _DLMallocMMap(unsigned __int64);
    MCAPI int _DLMallocMUnmap(void*, unsigned __int64);
    MCAPI void _RakFree(void*);
    MCAPI void _RakFree_Ex(void*, char const*, unsigned int);
    MCAPI void* _RakMalloc(unsigned __int64);
    MCAPI void* _RakMalloc_Ex(unsigned __int64, char const*, unsigned int);
    MCAPI void* _RakRealloc(void*, unsigned __int64);
    MCAPI void* _RakRealloc_Ex(void*, unsigned __int64, char const*, unsigned int);
};