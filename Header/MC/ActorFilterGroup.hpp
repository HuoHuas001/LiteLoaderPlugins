// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include "../Global.h"
#include "FilterGroup.hpp"
#include "Json.hpp"
#define EXTRA_INCLUDE_PART_ACTORFILTERGROUP
#include "Extra/ActorFilterGroupAPI.hpp"
#undef EXTRA_INCLUDE_PART_ACTORFILTERGROUP
class ActorFilterGroup : public FilterGroup {
#include "Extra/ActorFilterGroupAPI.hpp"
public:
    /*0*/ virtual ~ActorFilterGroup();
    /*1*/ virtual class std::shared_ptr<class FilterGroup> _createSubgroup(int /*enum enum FilterGroup::CollectionType*/) const;
    /*2*/ virtual bool _handleUnknownMember(std::string const&, class Json::Value const&);
    /*
    inline class std::shared_ptr<class FilterGroup> _createSubgroup(int \/*enum enum FilterGroup::CollectionType*\/ a0) const{
        class std::shared_ptr<class FilterGroup> (ActorFilterGroup::*rv)(int \/*enum enum FilterGroup::CollectionType*\/) const;
        *((void**)&rv) = dlsym("?_createSubgroup@ActorFilterGroup@@MEBA?AV?$shared_ptr@VFilterGroup@@@std@@W4CollectionType@FilterGroup@@@Z");
        return (this->*rv)(std::forward<int \/*enum enum FilterGroup::CollectionType*\/>(a0));
    }
    inline bool _handleUnknownMember(std::string const& a0, class Json::Value const& a1){
        bool (ActorFilterGroup::*rv)(std::string const&, class Json::Value const&);
        *((void**)&rv) = dlsym("?_handleUnknownMember@ActorFilterGroup@@MEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVValue@Json@@@Z");
        return (this->*rv)(std::forward<std::string const&>(a0), std::forward<class Json::Value const&>(a1));
    }
    */
    MCAPI bool evaluateActor(class Actor const&, class VariantParameterList const&) const;
    MCAPI class ActorFilterGroup& operator=(class ActorFilterGroup const&);
    MCAPI static void initialize();

protected:
    MCAPI bool _addLegacyFilter(std::string const&, struct ActorFilterGroup::LegacyMapping const&, class FilterInput const&);
    MCAPI bool _processLegacyArray(std::string const&, class Json::Value const&, struct ActorFilterGroup::LegacyMapping const&);
    MCAPI bool _processLegacyMember(std::string const&, class Json::Value const&, struct ActorFilterGroup::LegacyMapping const&);

private:
};