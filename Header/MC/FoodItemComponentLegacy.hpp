// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include "../Global.h"
#include "Json.hpp"
#define EXTRA_INCLUDE_PART_FOODITEMCOMPONENTLEGACY
#include "Extra/FoodItemComponentLegacyAPI.hpp"
#undef EXTRA_INCLUDE_PART_FOODITEMCOMPONENTLEGACY
class FoodItemComponentLegacy {
#include "Extra/FoodItemComponentLegacyAPI.hpp"
public:
    /*0*/ virtual ~FoodItemComponentLegacy();
    /*1*/ virtual void __unk_vfn_0();
    /*2*/ virtual void __unk_vfn_1();
    /*3*/ virtual class Item const* eatItem(class ItemStack&, class Actor&, class Level&);
    /*4*/ virtual bool use(class ItemStack&, class Player&);
    /*5*/ virtual class Item const* useTimeDepleted(class ItemStack&, class Player&, class Level&);
    /*
    inline float getSaturationModifier() const{
        float (FoodItemComponentLegacy::*rv)() const;
        *((void**)&rv) = dlsym("?getSaturationModifier@FoodItemComponentLegacy@@UEBAMXZ");
        return (this->*rv)();
    }
    inline int getNutrition() const{
        int (FoodItemComponentLegacy::*rv)() const;
        *((void**)&rv) = dlsym("?getNutrition@FoodItemComponentLegacy@@UEBAHXZ");
        return (this->*rv)();
    }
    inline class Item const* eatItem(class ItemStack& a0, class Actor& a1, class Level& a2){
        class Item const* (FoodItemComponentLegacy::*rv)(class ItemStack&, class Actor&, class Level&);
        *((void**)&rv) = dlsym("?eatItem@FoodItemComponentLegacy@@UEAAPEBVItem@@AEAVItemStack@@AEAVActor@@AEAVLevel@@@Z");
        return (this->*rv)(std::forward<class ItemStack&>(a0), std::forward<class Actor&>(a1), std::forward<class Level&>(a2));
    }
    inline bool use(class ItemStack& a0, class Player& a1){
        bool (FoodItemComponentLegacy::*rv)(class ItemStack&, class Player&);
        *((void**)&rv) = dlsym("?use@FoodItemComponentLegacy@@UEAA_NAEAVItemStack@@AEAVPlayer@@@Z");
        return (this->*rv)(std::forward<class ItemStack&>(a0), std::forward<class Player&>(a1));
    }
    inline class Item const* useTimeDepleted(class ItemStack& a0, class Player& a1, class Level& a2){
        class Item const* (FoodItemComponentLegacy::*rv)(class ItemStack&, class Player&, class Level&);
        *((void**)&rv) = dlsym("?useTimeDepleted@FoodItemComponentLegacy@@UEAAPEBVItem@@AEAVItemStack@@AEAVPlayer@@AEAVLevel@@@Z");
        return (this->*rv)(std::forward<class ItemStack&>(a0), std::forward<class Player&>(a1), std::forward<class Level&>(a2));
    }
    */
    MCAPI bool init(class Json::Value&, class SemVersion const&);

protected:

private:
    MCAPI void _applyEatEffects(class ItemStack const&, class Actor&, class Level&);
    MCAPI void _loadEffects(class Json::Value&);
    MCAPI void _loadRemoveEffects(class Json::Value&);
};