// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include "../Global.h"
#define EXTRA_INCLUDE_PART_MOLANGVARIABLE
#include "Extra/MolangVariableAPI.hpp"
#undef EXTRA_INCLUDE_PART_MOLANGVARIABLE
class MolangVariable {
#include "Extra/MolangVariableAPI.hpp"
public:
    MCAPI static enum MolangVariableIndex getVariableIndex(class HashedString const&);
    MCAPI static enum MolangVariableIndex getVariableIndex(unsigned __int64);
    MCAPI static enum MolangVariableIndex getVariableIndex(unsigned __int64, char const*, bool);
    MCAPI static class HashedString const& getVariableName(enum MolangVariableIndex);
    MCAPI static bool isValidName(char const*);
    MCAPI static void processWaterMark();

protected:

private:
    MCAPI static class std::recursive_mutex& _getMolangVariableIndexLock();
    MCAPI static bool mHasSetWatermark;
    MCAPI static class std::unordered_map<unsigned __int64, enum MolangVariableIndex, struct std::hash<unsigned __int64>, struct std::equal_to<unsigned __int64>, class std::allocator<struct std::pair<unsigned __int64 const, enum MolangVariableIndex> > > mVariableNameToIndexMap;
    MCAPI static class std::unordered_map<unsigned __int64, enum MolangVariableIndex, struct std::hash<unsigned __int64>, struct std::equal_to<unsigned __int64>, class std::allocator<struct std::pair<unsigned __int64 const, enum MolangVariableIndex> > > mVariableNameToIndexMap_LowWaterMark;
};