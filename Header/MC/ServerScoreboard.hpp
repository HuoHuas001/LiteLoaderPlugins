// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include <Global.h>
#define EXTRA_INCLUDE_PART_SERVERSCOREBOARD
#include "Extra/ServerScoreboardAPI.hpp"
#undef EXTRA_INCLUDE_PART_SERVERSCOREBOARD
class ServerScoreboard {
#include "Extra/ServerScoreboardAPI.hpp"
public:
    /*0*/ virtual ~ServerScoreboard();
    /*1*/ virtual class DisplayObjective const* setDisplayObjective(std::string const&, class Objective const&, int /*enum ObjectiveSortOrder*/);
    /*2*/ virtual class Objective* clearDisplayObjective(std::string const&);
    /*3*/ virtual struct ScoreboardId const& createScoreboardId(class Player const&);
    /*4*/ virtual struct ScoreboardId const& createScoreboardId(class Actor const&);
    /*5*/ virtual struct ScoreboardId const& createScoreboardId(std::string const&);
    /*6*/ virtual void onObjectiveAdded(class Objective const&);
    /*7*/ virtual void onObjectiveRemoved(class Objective&);
    /*8*/ virtual void onScoreChanged(struct ScoreboardId const&, class Objective const&);
    /*9*/ virtual void onPlayerScoreRemoved(struct ScoreboardId const&, class Objective const&);
    /*10*/ virtual void onPlayerJoined(class Player const&);
    /*11*/ virtual void onPlayerIdentityUpdated(struct PlayerScoreboardId const&);
    /*12*/ virtual void tick();
    /*13*/ virtual void setPacketSender(class PacketSender*);
    /*14*/ virtual void writeToLevelStorage();
    /*15*/ virtual bool isClientSide() const;

public:
    MCAPI void deserialize(std::unique_ptr<class CompoundTag>);
    MCAPI std::unique_ptr<class CompoundTag> serialize() const;
    MCAPI void setClearDisplayObjectiveCallback(class std::function<void(std::string const&, class DisplayObjective const&)>);
    MCAPI void setIdentityUpdatedCallback(class std::function<void(struct ScoreboardId const&)>);
    MCAPI void setScoreChangedCallback(class std::function<void(struct ScoreboardId const&)>);
    MCAPI void setScoreRemovedCallback(class std::function<void(struct ScoreboardId const&)>);
    MCAPI void setSetDisplayObjectiveCallback(class std::function<void(std::string const&, class DisplayObjective const&)>);

private:
    MCAPI void _stopTrackingObjective(class Objective const&);
    MCAPI struct ScorePacketInfo _unpackIdentityDefToScorePacket(class ScoreboardIdentityRef const&, std::string const&, int);
};