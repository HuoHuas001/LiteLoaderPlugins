// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include "../Global.h"
#define EXTRA_INCLUDE_PART_RESOURCEPACKLISTENER
#include "Extra/ResourcePackListenerAPI.hpp"
#undef EXTRA_INCLUDE_PART_RESOURCEPACKLISTENER
class ResourcePackListener {
#include "Extra/ResourcePackListenerAPI.hpp"
public:
    /*0*/ virtual ~ResourcePackListener();
    /*
    inline void onBaseGamePackDownloadComplete(){
        void (ResourcePackListener::*rv)();
        *((void**)&rv) = dlsym("?onBaseGamePackDownloadComplete@ResourcePackListener@@UEAAXXZ");
        return (this->*rv)();
    }
    inline void onFullPackStackInvalid(){
        void (ResourcePackListener::*rv)();
        *((void**)&rv) = dlsym("?onFullPackStackInvalid@ResourcePackListener@@UEAAXXZ");
        return (this->*rv)();
    }
    inline void onResourceManagerDestroyed(class ResourcePackManager& a0){
        void (ResourcePackListener::*rv)(class ResourcePackManager&);
        *((void**)&rv) = dlsym("?onResourceManagerDestroyed@ResourcePackListener@@UEAAXAEAVResourcePackManager@@@Z");
        return (this->*rv)(std::forward<class ResourcePackManager&>(a0));
    }
    inline void onLanguageSubpacksChanged(){
        void (ResourcePackListener::*rv)();
        *((void**)&rv) = dlsym("?onLanguageSubpacksChanged@ResourcePackListener@@UEAAXXZ");
        return (this->*rv)();
    }
    */

protected:

private:
};