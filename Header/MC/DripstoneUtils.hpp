// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include "../Global.h"
#define EXTRA_INCLUDE_PART_DRIPSTONEUTILS
#include "Extra/DripstoneUtilsAPI.hpp"
#undef EXTRA_INCLUDE_PART_DRIPSTONEUTILS
namespace DripstoneUtils {
#include "Extra/DripstoneUtilsAPI.hpp"
    MCAPI void buildBaseToTipColumn(class IBlockWorldGenAPI&, class BlockPos const&, unsigned char, int, bool);
    MCAPI bool canBeAdjacentToWater(class IBlockWorldGenAPI&, class BlockPos const&);
    MCAPI class Block const& getPlacementBlock(unsigned char, enum DripstoneThickness const&);
    MCAPI class std::optional<struct DripstoneUtils::PointedDripstoneBasePos> getPointedDripstoneBasePos(class IBlockWorldGenAPI&, class BlockPos const&, class Random&);
    MCAPI bool isDripstoneBaseOrLava(class IBlockWorldGenAPI const&, class BlockPos const&);
    MCAPI bool isEmptyOrWater(class IBlockWorldGenAPI const&, class BlockPos const&);
    MCAPI bool isLava(class IBlockWorldGenAPI const&, class BlockPos const&);
    MCAPI bool placeDripstoneBlockIfPossible(class IBlockWorldGenAPI&, class BlockPos const&);
    MCAPI bool replaceableByDripstone(class BlockLegacy const&);
};