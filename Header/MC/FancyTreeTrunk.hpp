// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include <Global.h>
#include "TreeHelper.hpp"
#define EXTRA_INCLUDE_PART_FANCYTREETRUNK
#include "Extra/FancyTreeTrunkAPI.hpp"
#undef EXTRA_INCLUDE_PART_FANCYTREETRUNK
class FancyTreeTrunk {
#include "Extra/FancyTreeTrunkAPI.hpp"
public:
    /*0*/ virtual ~FancyTreeTrunk();
    /*1*/ virtual class std::optional<class BlockPos> placeTrunk(class IBlockWorldGenAPI&, class BlockPos const&, class Random&, class RenderParams&, struct TreeHelper::TreeParams const&, class ITreeCanopy const*) const;

private:
    MCAPI int _checkLine(class IBlockWorldGenAPI&, class BlockPos const&, class BlockPos const&, struct TreeHelper::TreeParams const&) const;
    MCAPI void _placeBranches(class IBlockWorldGenAPI&, class BlockPos const&, int, std::vector<class FancyTreeTrunk::FoliageCoords> const&) const;
    MCAPI void _placeLimb(class IBlockWorldGenAPI&, class BlockPos const&, class BlockPos const&) const;
};