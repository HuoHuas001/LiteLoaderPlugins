// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include <Global.h>
#include "Scripting.hpp"
#define EXTRA_INCLUDE_PART_SCRIPTBLOCKGAMEPLAYHANDLER
#include "Extra/ScriptBlockGameplayHandlerAPI.hpp"
#undef EXTRA_INCLUDE_PART_SCRIPTBLOCKGAMEPLAYHANDLER
class ScriptBlockGameplayHandler {
#include "Extra/ScriptBlockGameplayHandlerAPI.hpp"
public:
    /*0*/ virtual ~ScriptBlockGameplayHandler();
    /*1*/ virtual void unk_vfn_1();
    /*2*/ virtual void unk_vfn_2();
    /*3*/ virtual int /*enum HandlerResult*/ handleBlockPatternPostEvent(struct BlockPatternEvent const&);
    /*4*/ virtual void unk_vfn_4();
    /*5*/ virtual void unk_vfn_5();
    /*6*/ virtual struct GameplayHandlerResult<class std::optional<std::string>> handleCraftUISetResultName(struct CraftUISetResultNameEvent const&);
    /*7*/ virtual struct GameplayHandlerResult<int /*enum CoordinatorResult*/> handlePistonActionEvent(struct PistonActionEvent const&);
    /*8*/ virtual struct GameplayHandlerResult<int /*enum CoordinatorResult*/> handleExplosionStartedEvent(struct ExplosionStartedEvent&);

private:
    MCAPI bool _handleExplosionStartedEvent(struct ExplosionStartedEvent&, class Scripting::WeakLifetimeScope const&, struct Scripting::TypedObjectHandle<class ScriptWorldEvents>) const;
    MCAPI bool _handlePistonActionEvent(struct PistonActionEvent const&, class Scripting::WeakLifetimeScope const&, struct Scripting::TypedObjectHandle<class ScriptWorldEvents>) const;
};