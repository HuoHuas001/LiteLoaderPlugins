// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include "../Global.h"
#include "ScriptObject.hpp"
#include "Scripting.hpp"
#define EXTRA_INCLUDE_PART_BASESCRIPTBLOCKLIQUIDCONTAINERCOMPONENT
#include "Extra/BaseScriptBlockLiquidContainerComponentAPI.hpp"
#undef EXTRA_INCLUDE_PART_BASESCRIPTBLOCKLIQUIDCONTAINERCOMPONENT
class BaseScriptBlockLiquidContainerComponent : public ScriptObject {
#include "Extra/BaseScriptBlockLiquidContainerComponentAPI.hpp"
public:
    /*0*/ virtual ~BaseScriptBlockLiquidContainerComponent();
    /*1*/ virtual class Scripting::Result<void> setFillLevel(int);
    /*
    inline class Scripting::Result<void> setFillLevel(int a0){
        class Scripting::Result<void> (BaseScriptBlockLiquidContainerComponent::*rv)(int);
        *((void**)&rv) = dlsym("?setFillLevel@BaseScriptBlockLiquidContainerComponent@@UEAA?AV?$Result@X@Scripting@@H@Z");
        return (this->*rv)(std::forward<int>(a0));
    }
    */
    MCAPI class Scripting::Result<int> getFillLevel();

protected:
    MCAPI class CauldronBlock const* _tryGetCauldronBlock();
    MCAPI class CauldronBlockActor* _tryGetCauldronBlockActor();
    MCAPI static enum GameTestFluidType _getActualCauldronLiquidType(class BlockSource&, class BlockPos);

private:
};