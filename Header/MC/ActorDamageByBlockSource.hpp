// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include <Global.h>
#include "ActorDamageSource.hpp"
#define EXTRA_INCLUDE_PART_ACTORDAMAGEBYBLOCKSOURCE
#include "Extra/ActorDamageByBlockSourceAPI.hpp"
#undef EXTRA_INCLUDE_PART_ACTORDAMAGEBYBLOCKSOURCE
class ActorDamageByBlockSource : public ActorDamageSource {
#include "Extra/ActorDamageByBlockSourceAPI.hpp"
public:
    /*0*/ virtual ~ActorDamageByBlockSource();
    /*1*/ virtual bool isEntitySource() const;
    /*2*/ virtual bool isChildEntitySource() const;
    /*3*/ virtual bool isBlockSource() const;
    /*5*/ virtual struct std::pair<std::string, std::vector<std::string>> getDeathMessage(std::string, class Actor*) const;
    /*6*/ virtual bool getIsCreative() const;
    /*7*/ virtual bool getIsWorldBuilder() const;
    /*8*/ virtual void unk_vfn_8();
    /*9*/ virtual void unk_vfn_9();
    /*10*/ virtual int /*enum ActorCategory*/ getEntityCategories() const;
    /*11*/ virtual bool getDamagingEntityIsCreative() const;
    /*12*/ virtual bool getDamagingEntityIsWorldBuilder() const;
    /*13*/ virtual struct ActorUniqueID getDamagingEntityUniqueID() const;
    /*14*/ virtual int /*enum ActorType*/ getDamagingEntityType() const;
    /*15*/ virtual int /*enum ActorCategory*/ getDamagingEntityCategories() const;
    /*16*/ virtual std::unique_ptr<class ActorDamageSource> clone() const;
};