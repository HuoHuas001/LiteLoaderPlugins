// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include "../Global.h"
#include "Json.hpp"
#define EXTRA_INCLUDE_PART_ECONOMYTRADEABLEDESCRIPTION
#include "Extra/EconomyTradeableDescriptionAPI.hpp"
#undef EXTRA_INCLUDE_PART_ECONOMYTRADEABLEDESCRIPTION
class EconomyTradeableDescription {
#include "Extra/EconomyTradeableDescriptionAPI.hpp"
public:
    /*0*/ virtual char const* getJsonName() const;
    /*1*/ virtual ~EconomyTradeableDescription();
    /*2*/ virtual void deserializeData(struct DeserializeDataParams);
    /*3*/ virtual void serializeData(class Json::Value&) const;
    /*
    inline void deserializeData(struct DeserializeDataParams a0){
        void (EconomyTradeableDescription::*rv)(struct DeserializeDataParams);
        *((void**)&rv) = dlsym("?deserializeData@EconomyTradeableDescription@@UEAAXUDeserializeDataParams@@@Z");
        return (this->*rv)(std::forward<struct DeserializeDataParams>(a0));
    }
    inline char const* getJsonName() const{
        char const* (EconomyTradeableDescription::*rv)() const;
        *((void**)&rv) = dlsym("?getJsonName@EconomyTradeableDescription@@UEBAPEBDXZ");
        return (this->*rv)();
    }
    inline void serializeData(class Json::Value& a0) const{
        void (EconomyTradeableDescription::*rv)(class Json::Value&) const;
        *((void**)&rv) = dlsym("?serializeData@EconomyTradeableDescription@@UEBAXAEAVValue@Json@@@Z");
        return (this->*rv)(std::forward<class Json::Value&>(a0));
    }
    */

protected:

private:
};