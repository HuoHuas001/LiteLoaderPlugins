// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include "../Global.h"
#include "ScriptActorComponent.hpp"
#include "Scripting.hpp"
#define EXTRA_INCLUDE_PART_NAVIGATIONSCRIPTACTORCOMPONENT
#include "Extra/NavigationScriptActorComponentAPI.hpp"
#undef EXTRA_INCLUDE_PART_NAVIGATIONSCRIPTACTORCOMPONENT
class NavigationScriptActorComponent : public ScriptActorComponent {
#include "Extra/NavigationScriptActorComponentAPI.hpp"
public:
    /*0*/ virtual ~NavigationScriptActorComponent();
    /*1*/ virtual class Scripting::Result<bool> getIsAmphibious() const;
    /*2*/ virtual class Scripting::Result<bool> getAvoidSun() const;
    /*3*/ virtual class Scripting::Result<bool> getCanPassDoors() const;
    /*4*/ virtual class Scripting::Result<bool> getCanOpenDoors() const;
    /*5*/ virtual class Scripting::Result<bool> getCanOpenIronDoors() const;
    /*6*/ virtual class Scripting::Result<bool> getCanBreakDoors() const;
    /*7*/ virtual class Scripting::Result<bool> getAvoidWater() const;
    /*8*/ virtual class Scripting::Result<bool> getAvoidDamageBlocks() const;
    /*9*/ virtual class Scripting::Result<bool> getCanFloat() const;
    /*10*/ virtual class Scripting::Result<bool> getCanSink() const;
    /*11*/ virtual class Scripting::Result<bool> getCanPathOverWater() const;
    /*12*/ virtual class Scripting::Result<bool> getCanPathOverLava() const;
    /*13*/ virtual class Scripting::Result<bool> getCanWalkInLava() const;
    /*14*/ virtual class Scripting::Result<bool> getAvoidPortals() const;
    /*15*/ virtual class Scripting::Result<bool> getCanWalk() const;
    /*16*/ virtual class Scripting::Result<bool> getCanSwim() const;
    /*17*/ virtual class Scripting::Result<bool> getCanBreach() const;
    /*18*/ virtual class Scripting::Result<bool> getCanJump() const;
    /*19*/ virtual class Scripting::Result<bool> getCanPathFromAir() const;
    /*
    inline class Scripting::Result<bool> getAvoidDamageBlocks() const{
        class Scripting::Result<bool> (NavigationScriptActorComponent::*rv)() const;
        *((void**)&rv) = dlsym("?getAvoidDamageBlocks@NavigationScriptActorComponent@@UEBA?AV?$Result@_N@Scripting@@XZ");
        return (this->*rv)();
    }
    inline class Scripting::Result<bool> getAvoidPortals() const{
        class Scripting::Result<bool> (NavigationScriptActorComponent::*rv)() const;
        *((void**)&rv) = dlsym("?getAvoidPortals@NavigationScriptActorComponent@@UEBA?AV?$Result@_N@Scripting@@XZ");
        return (this->*rv)();
    }
    inline class Scripting::Result<bool> getAvoidSun() const{
        class Scripting::Result<bool> (NavigationScriptActorComponent::*rv)() const;
        *((void**)&rv) = dlsym("?getAvoidSun@NavigationScriptActorComponent@@UEBA?AV?$Result@_N@Scripting@@XZ");
        return (this->*rv)();
    }
    inline class Scripting::Result<bool> getAvoidWater() const{
        class Scripting::Result<bool> (NavigationScriptActorComponent::*rv)() const;
        *((void**)&rv) = dlsym("?getAvoidWater@NavigationScriptActorComponent@@UEBA?AV?$Result@_N@Scripting@@XZ");
        return (this->*rv)();
    }
    inline class Scripting::Result<bool> getCanBreach() const{
        class Scripting::Result<bool> (NavigationScriptActorComponent::*rv)() const;
        *((void**)&rv) = dlsym("?getCanBreach@NavigationScriptActorComponent@@UEBA?AV?$Result@_N@Scripting@@XZ");
        return (this->*rv)();
    }
    inline class Scripting::Result<bool> getCanBreakDoors() const{
        class Scripting::Result<bool> (NavigationScriptActorComponent::*rv)() const;
        *((void**)&rv) = dlsym("?getCanBreakDoors@NavigationScriptActorComponent@@UEBA?AV?$Result@_N@Scripting@@XZ");
        return (this->*rv)();
    }
    inline class Scripting::Result<bool> getCanFloat() const{
        class Scripting::Result<bool> (NavigationScriptActorComponent::*rv)() const;
        *((void**)&rv) = dlsym("?getCanFloat@NavigationScriptActorComponent@@UEBA?AV?$Result@_N@Scripting@@XZ");
        return (this->*rv)();
    }
    inline class Scripting::Result<bool> getCanJump() const{
        class Scripting::Result<bool> (NavigationScriptActorComponent::*rv)() const;
        *((void**)&rv) = dlsym("?getCanJump@NavigationScriptActorComponent@@UEBA?AV?$Result@_N@Scripting@@XZ");
        return (this->*rv)();
    }
    inline class Scripting::Result<bool> getCanOpenDoors() const{
        class Scripting::Result<bool> (NavigationScriptActorComponent::*rv)() const;
        *((void**)&rv) = dlsym("?getCanOpenDoors@NavigationScriptActorComponent@@UEBA?AV?$Result@_N@Scripting@@XZ");
        return (this->*rv)();
    }
    inline class Scripting::Result<bool> getCanOpenIronDoors() const{
        class Scripting::Result<bool> (NavigationScriptActorComponent::*rv)() const;
        *((void**)&rv) = dlsym("?getCanOpenIronDoors@NavigationScriptActorComponent@@UEBA?AV?$Result@_N@Scripting@@XZ");
        return (this->*rv)();
    }
    inline class Scripting::Result<bool> getCanPassDoors() const{
        class Scripting::Result<bool> (NavigationScriptActorComponent::*rv)() const;
        *((void**)&rv) = dlsym("?getCanPassDoors@NavigationScriptActorComponent@@UEBA?AV?$Result@_N@Scripting@@XZ");
        return (this->*rv)();
    }
    inline class Scripting::Result<bool> getCanPathFromAir() const{
        class Scripting::Result<bool> (NavigationScriptActorComponent::*rv)() const;
        *((void**)&rv) = dlsym("?getCanPathFromAir@NavigationScriptActorComponent@@UEBA?AV?$Result@_N@Scripting@@XZ");
        return (this->*rv)();
    }
    inline class Scripting::Result<bool> getCanPathOverLava() const{
        class Scripting::Result<bool> (NavigationScriptActorComponent::*rv)() const;
        *((void**)&rv) = dlsym("?getCanPathOverLava@NavigationScriptActorComponent@@UEBA?AV?$Result@_N@Scripting@@XZ");
        return (this->*rv)();
    }
    inline class Scripting::Result<bool> getCanPathOverWater() const{
        class Scripting::Result<bool> (NavigationScriptActorComponent::*rv)() const;
        *((void**)&rv) = dlsym("?getCanPathOverWater@NavigationScriptActorComponent@@UEBA?AV?$Result@_N@Scripting@@XZ");
        return (this->*rv)();
    }
    inline class Scripting::Result<bool> getCanSink() const{
        class Scripting::Result<bool> (NavigationScriptActorComponent::*rv)() const;
        *((void**)&rv) = dlsym("?getCanSink@NavigationScriptActorComponent@@UEBA?AV?$Result@_N@Scripting@@XZ");
        return (this->*rv)();
    }
    inline class Scripting::Result<bool> getCanSwim() const{
        class Scripting::Result<bool> (NavigationScriptActorComponent::*rv)() const;
        *((void**)&rv) = dlsym("?getCanSwim@NavigationScriptActorComponent@@UEBA?AV?$Result@_N@Scripting@@XZ");
        return (this->*rv)();
    }
    inline class Scripting::Result<bool> getCanWalk() const{
        class Scripting::Result<bool> (NavigationScriptActorComponent::*rv)() const;
        *((void**)&rv) = dlsym("?getCanWalk@NavigationScriptActorComponent@@UEBA?AV?$Result@_N@Scripting@@XZ");
        return (this->*rv)();
    }
    inline class Scripting::Result<bool> getCanWalkInLava() const{
        class Scripting::Result<bool> (NavigationScriptActorComponent::*rv)() const;
        *((void**)&rv) = dlsym("?getCanWalkInLava@NavigationScriptActorComponent@@UEBA?AV?$Result@_N@Scripting@@XZ");
        return (this->*rv)();
    }
    inline class Scripting::Result<bool> getIsAmphibious() const{
        class Scripting::Result<bool> (NavigationScriptActorComponent::*rv)() const;
        *((void**)&rv) = dlsym("?getIsAmphibious@NavigationScriptActorComponent@@UEBA?AV?$Result@_N@Scripting@@XZ");
        return (this->*rv)();
    }
    */

protected:

private:
};