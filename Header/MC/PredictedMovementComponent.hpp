// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include <Global.h>
#define EXTRA_INCLUDE_PART_PREDICTEDMOVEMENTCOMPONENT
#include "Extra/PredictedMovementComponentAPI.hpp"
#undef EXTRA_INCLUDE_PART_PREDICTEDMOVEMENTCOMPONENT
class PredictedMovementComponent {
#include "Extra/PredictedMovementComponentAPI.hpp"

public:
    MCAPI bool isEnabled() const;
    MCAPI void reset();
    MCAPI void tick(class std::chrono::time_point<struct std::chrono::steady_clock, class std::chrono::duration<__int64, struct std::ratio<1, 1000000000>>> const&);

private:
    MCAPI void _debugLog(struct PredictedMovementComponent::PredictionDbgData const&) const;
    MCAPI bool _isDebugLoggingEnabled() const;
    MCAPI void _sendPredictionEvent(enum MovePredictionType, class Vec3 const&) const;
    MCAPI void _tickNextPosition(class std::chrono::time_point<struct std::chrono::steady_clock, class std::chrono::duration<__int64, struct std::ratio<1, 1000000000>>> const&);
    MCAPI bool _tryIfTeleport(class std::shared_ptr<struct PredictedMovementComponent::HistoryItem const> const&, class std::shared_ptr<struct PredictedMovementComponent::HistoryItem const> const&, bool);
    MCAPI bool _tryInterpolate(class std::chrono::time_point<struct std::chrono::steady_clock, class std::chrono::duration<__int64, struct std::ratio<1, 1000000000>>> const&);

    MCAPI static unsigned int const LERP_STEP_SIZE;
    MCAPI static std::unique_ptr<struct PredictedMovementComponent::RuntimePredictionData> mGlobalRuntimePredictionData;
};