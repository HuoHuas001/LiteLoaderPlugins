// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include "../Global.h"
#define EXTRA_INCLUDE_PART_SERVERPLAYERREWINDLISTENER
#include "Extra/ServerPlayerRewindListenerAPI.hpp"
#undef EXTRA_INCLUDE_PART_SERVERPLAYERREWINDLISTENER
class ServerPlayerRewindListener {
#include "Extra/ServerPlayerRewindListenerAPI.hpp"
public:
    /*0*/ virtual ~ServerPlayerRewindListener();
    /*1*/ virtual void __unk_vfn_0();
    /*2*/ virtual void __unk_vfn_1();
    /*3*/ virtual void __unk_vfn_2();
    /*4*/ virtual void __unk_vfn_3();
    /*5*/ virtual void __unk_vfn_4();
    /*6*/ virtual void __unk_vfn_5();
    /*7*/ virtual int /*enum enum EventResult*/ onPlayerAuthInputReceived(class Player&, class PlayerAuthInputPacket const&);
    /*8*/ virtual int /*enum enum EventResult*/ onPlayerAuthInputApplied(class Player&, class PlayerAuthInputPacket const&);
    /*
    inline int \/*enum enum EventResult*\/ onPlayerAuthInputApplied(class Player& a0, class PlayerAuthInputPacket const& a1){
        int \/*enum enum EventResult*\/ (ServerPlayerRewindListener::*rv)(class Player&, class PlayerAuthInputPacket const&);
        *((void**)&rv) = dlsym("?onPlayerAuthInputApplied@ServerPlayerRewindListener@@UEAA?AW4EventResult@@AEAVPlayer@@AEBVPlayerAuthInputPacket@@@Z");
        return (this->*rv)(std::forward<class Player&>(a0), std::forward<class PlayerAuthInputPacket const&>(a1));
    }
    inline int \/*enum enum EventResult*\/ onPlayerAuthInputReceived(class Player& a0, class PlayerAuthInputPacket const& a1){
        int \/*enum enum EventResult*\/ (ServerPlayerRewindListener::*rv)(class Player&, class PlayerAuthInputPacket const&);
        *((void**)&rv) = dlsym("?onPlayerAuthInputReceived@ServerPlayerRewindListener@@UEAA?AW4EventResult@@AEAVPlayer@@AEBVPlayerAuthInputPacket@@@Z");
        return (this->*rv)(std::forward<class Player&>(a0), std::forward<class PlayerAuthInputPacket const&>(a1));
    }
    */
    MCAPI static void _onPlayerAuthInputReceived(unsigned __int64, struct PlayerMovementSettings const&, class EntityContext&, struct IActorMovementProxy&);

protected:

private:
};