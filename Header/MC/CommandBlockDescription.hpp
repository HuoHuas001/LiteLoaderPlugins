// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include "../Global.h"
#include "Json.hpp"
#define EXTRA_INCLUDE_PART_COMMANDBLOCKDESCRIPTION
#include "Extra/CommandBlockDescriptionAPI.hpp"
#undef EXTRA_INCLUDE_PART_COMMANDBLOCKDESCRIPTION
class CommandBlockDescription {
#include "Extra/CommandBlockDescriptionAPI.hpp"
public:
    /*0*/ virtual void __unk_vfn_0();
    /*1*/ virtual ~CommandBlockDescription();
    /*2*/ virtual void deserializeData(struct DeserializeDataParams);
    /*3*/ virtual void serializeData(class Json::Value&) const;
    /*
    inline void deserializeData(struct DeserializeDataParams a0){
        void (CommandBlockDescription::*rv)(struct DeserializeDataParams);
        *((void**)&rv) = dlsym("?deserializeData@CommandBlockDescription@@UEAAXUDeserializeDataParams@@@Z");
        return (this->*rv)(std::forward<struct DeserializeDataParams>(a0));
    }
    inline char const* getJsonName() const{
        char const* (CommandBlockDescription::*rv)() const;
        *((void**)&rv) = dlsym("?getJsonName@CommandBlockDescription@@UEBAPEBDXZ");
        return (this->*rv)();
    }
    inline void serializeData(class Json::Value& a0) const{
        void (CommandBlockDescription::*rv)(class Json::Value&) const;
        *((void**)&rv) = dlsym("?serializeData@CommandBlockDescription@@UEBAXAEAVValue@Json@@@Z");
        return (this->*rv)(std::forward<class Json::Value&>(a0));
    }
    */

protected:

private:
};