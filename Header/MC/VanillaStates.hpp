// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include <Global.h>
#define EXTRA_INCLUDE_PART_VANILLASTATES
#include "Extra/VanillaStatesAPI.hpp"
#undef EXTRA_INCLUDE_PART_VANILLASTATES
namespace VanillaStates {
#include "Extra/VanillaStatesAPI.hpp"

MCAPI class ItemStateVariant<bool> const Active;
MCAPI class ItemStateVariant<int> const Age;
MCAPI class ItemStateVariant<bool> const AgeBit;
MCAPI class ItemStateVariant<bool> const AllowUnderwaterBit;
MCAPI class ItemStateVariant<bool> const AttachedBit;
MCAPI class ItemStateVariant<enum AttachmentType> const Attachment;
MCAPI class ItemStateVariant<enum LeafSize> const BambooLeafSize;
MCAPI class ItemStateVariant<enum StalkThickness> const BambooThickness;
MCAPI class ItemStateVariant<int> const BeehiveHoneyLevel;
MCAPI class ItemStateVariant<bool> const BigDripleafHead;
MCAPI class ItemStateVariant<enum BigDripleafTilt> const BigDripleafTilt;
MCAPI class ItemStateVariant<int> const BiteCounter;
MCAPI class ItemStateVariant<int> const BlockLightLevel;
MCAPI class ItemStateVariant<bool> const Bloom;
MCAPI class ItemStateVariant<bool> const BrewingStandSlotABit;
MCAPI class ItemStateVariant<bool> const BrewingStandSlotBBit;
MCAPI class ItemStateVariant<bool> const BrewingStandSlotCBit;
MCAPI class ItemStateVariant<bool> const ButtonPressedBit;
MCAPI class ItemStateVariant<int> const Candles;
MCAPI class ItemStateVariant<enum CauldronLiquidType> const CauldronLiquid;
MCAPI class ItemStateVariant<enum ChemistryTableType> const ChemistryTableType;
MCAPI class ItemStateVariant<enum ChiselType> const ChiselType;
MCAPI class ItemStateVariant<int> const ClusterCount;
MCAPI class ItemStateVariant<enum BlockColor> const Color;
MCAPI class ItemStateVariant<bool> const ColorBit;
MCAPI class ItemStateVariant<int> const ComposterFillLevel;
MCAPI class ItemStateVariant<bool> const ConditionalBit;
MCAPI class ItemStateVariant<enum CoralColor> const CoralColor;
MCAPI class ItemStateVariant<int> const CoralDirection;
MCAPI class ItemStateVariant<int> const CoralFanDirection;
MCAPI class ItemStateVariant<bool> const CoralHangTypeBit;
MCAPI class ItemStateVariant<bool> const CoveredBit;
MCAPI class ItemStateVariant<enum HatchLevel> const CrackedState;
MCAPI class ItemStateVariant<int> const DEPRECATED;
MCAPI class ItemStateVariant<enum AnvilDamage> const Damage;
MCAPI class ItemStateVariant<bool> const DeadBit;
MCAPI class ItemStateVariant<int> const Direction;
MCAPI class ItemStateVariant<enum DirtType> const DirtType;
MCAPI class ItemStateVariant<bool> const DisarmedBit;
MCAPI class ItemStateVariant<bool> const DoorHingeBit;
MCAPI class ItemStateVariant<enum DoublePlantType> const DoublePlantType;
MCAPI class ItemStateVariant<bool> const DragDown;
MCAPI class ItemStateVariant<enum DripstoneThickness> const DripstoneThickness;
MCAPI class ItemStateVariant<bool> const EndPortalEyeBit;
MCAPI class ItemStateVariant<bool> const ExplodeBit;
MCAPI class ItemStateVariant<bool> const Extinguished;
MCAPI class ItemStateVariant<int> const FacingDirection;
MCAPI class ItemStateVariant<int> const FillLevel;
MCAPI class ItemStateVariant<enum FlowerType> const FlowerType;
MCAPI class ItemStateVariant<int> const GrowingPlantAge;
MCAPI class ItemStateVariant<int> const Growth;
MCAPI class ItemStateVariant<bool> const HangingBit;
MCAPI class ItemStateVariant<bool> const HeadPieceBit;
MCAPI class ItemStateVariant<int> const Height;
MCAPI class ItemStateVariant<int> const HugeMushroomBits;
MCAPI class ItemStateVariant<bool> const InWallBit;
MCAPI class ItemStateVariant<bool> const InfiniburnBit;
MCAPI class ItemStateVariant<bool> const ItemFrameMapBit;
MCAPI class ItemStateVariant<bool> const ItemFramePhotoBit;
MCAPI class ItemStateVariant<int> const KelpAge;
MCAPI class ItemStateVariant<enum LeverDirection> const LeverDirection;
MCAPI class ItemStateVariant<int> const LiquidDepth;
MCAPI class ItemStateVariant<bool> const Lit;
MCAPI class ItemStateVariant<int> const MoisturizedAmount;
MCAPI class ItemStateVariant<enum MonsterEggStoneType> const MonsterEggStoneType;
MCAPI class ItemStateVariant<int> const MultiFaceDirectionBits;
MCAPI class ItemStateVariant<enum NewLeafType> const NewLeafType;
MCAPI class ItemStateVariant<enum NewLogType> const NewLogType;
MCAPI class ItemStateVariant<bool> const NoDropBit;
MCAPI class ItemStateVariant<bool> const OccupiedBit;
MCAPI class ItemStateVariant<enum OldLeafType> const OldLeafType;
MCAPI class ItemStateVariant<enum OldLogType> const OldLogType;
MCAPI class ItemStateVariant<bool> const OpenBit;
MCAPI class ItemStateVariant<bool> const OutputLitBit;
MCAPI class ItemStateVariant<bool> const OutputSubtractBit;
MCAPI class ItemStateVariant<bool> const PersistentBit;
MCAPI class ItemStateVariant<enum PillarAxis> const PillarAxis;
MCAPI class ItemStateVariant<enum PortalAxis> const PortalAxis;
MCAPI class ItemStateVariant<bool> const PoweredBit;
MCAPI class ItemStateVariant<enum PrismarineBlockType> const PrismarineBlockType;
MCAPI class ItemStateVariant<bool> const RailDataBit;
MCAPI class ItemStateVariant<int> const RailDirection;
MCAPI class ItemStateVariant<int> const RedstoneSignal;
MCAPI class ItemStateVariant<int> const RepeaterDelay;
MCAPI class ItemStateVariant<int> const RespawnAnchorCharge;
MCAPI class ItemStateVariant<int> const Rotation;
MCAPI class ItemStateVariant<enum SandStoneType> const SandStoneType;
MCAPI class ItemStateVariant<enum SandType> const SandType;
MCAPI class ItemStateVariant<enum SaplingType> const SaplingType;
MCAPI class ItemStateVariant<enum SeaGrassType> const SeaGrassType;
MCAPI class ItemStateVariant<enum SpongeType> const SpongeType;
MCAPI class ItemStateVariant<int> const Stability;
MCAPI class ItemStateVariant<bool> const StabilityCheckBit;
MCAPI class ItemStateVariant<int> const StandingRotation;
MCAPI class ItemStateVariant<enum StoneBrickType> const StoneBrickType;
MCAPI class ItemStateVariant<enum StoneSlabType> const StoneSlabType;
MCAPI class ItemStateVariant<enum StoneSlabType2> const StoneSlabType2;
MCAPI class ItemStateVariant<enum StoneSlabType3> const StoneSlabType3;
MCAPI class ItemStateVariant<enum StoneSlabType4> const StoneSlabType4;
MCAPI class ItemStateVariant<enum StoneType> const StoneType;
MCAPI class ItemStateVariant<bool> const StrippedBit;
MCAPI class ItemStateVariant<enum StructureBlockType> const StructureBlockType;
MCAPI class ItemStateVariant<enum StructureVoidType> const StructureVoidType;
MCAPI class ItemStateVariant<bool> const SuspendedBit;
MCAPI class ItemStateVariant<enum TallGrassType> const TallGrassType;
MCAPI class ItemStateVariant<bool> const ToggleBit;
MCAPI class ItemStateVariant<bool> const TopSlotBit;
MCAPI class ItemStateVariant<enum TorchFacing> const TorchFacingDirection;
MCAPI class ItemStateVariant<bool> const TriggeredBit;
MCAPI class ItemStateVariant<enum EggCount> const TurtleEggCount;
MCAPI class ItemStateVariant<int> const TwistingVinesAge;
MCAPI class ItemStateVariant<bool> const UpdateBit;
MCAPI class ItemStateVariant<bool> const UpperBlockBit;
MCAPI class ItemStateVariant<bool> const UpsideDownBit;
MCAPI class ItemStateVariant<int> const VineDirectionBits;
MCAPI class ItemStateVariant<enum WallBlockType> const WallBlockType;
MCAPI class ItemStateVariant<enum WallConnectionType> const WallConnectionTypeEast;
MCAPI class ItemStateVariant<enum WallConnectionType> const WallConnectionTypeNorth;
MCAPI class ItemStateVariant<enum WallConnectionType> const WallConnectionTypeSouth;
MCAPI class ItemStateVariant<enum WallConnectionType> const WallConnectionTypeWest;
MCAPI class ItemStateVariant<bool> const WallPostBit;
MCAPI class ItemStateVariant<int> const WeepingVinesAge;
MCAPI class ItemStateVariant<int> const WeirdoDirection;
MCAPI class ItemStateVariant<enum WoodType> const WoodType;
MCAPI class ItemState const* getDataState(std::string const&);
MCAPI class ItemState const* getState(class HashedString const&, struct VanillaStates::CachedItemStateMapPtr&);
MCAPI class ItemState const* getState(class HashedString const&);
MCAPI void registerStates();
MCAPI void unregisterStates();

} // namespace VanillaStates