// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include "../Global.h"
#define EXTRA_INCLUDE_PART_BASEGOALDEFINITION
#include "Extra/BaseGoalDefinitionAPI.hpp"
#undef EXTRA_INCLUDE_PART_BASEGOALDEFINITION
class BaseGoalDefinition {
#include "Extra/BaseGoalDefinitionAPI.hpp"
public:
    /*0*/ virtual ~BaseGoalDefinition();
    /*
    inline bool validateMobType(class Mob& a0){
        bool (BaseGoalDefinition::*rv)(class Mob&);
        *((void**)&rv) = dlsym("?validateMobType@BaseGoalDefinition@@UEAA_NAEAVMob@@@Z");
        return (this->*rv)(std::forward<class Mob&>(a0));
    }
    inline bool validate(class Mob& a0){
        bool (BaseGoalDefinition::*rv)(class Mob&);
        *((void**)&rv) = dlsym("?validate@BaseGoalDefinition@@UEAA_NAEAVMob@@@Z");
        return (this->*rv)(std::forward<class Mob&>(a0));
    }
    */
    MCAPI void initialize(class EntityContext&, class Goal&);

protected:

private:
    MCAPI static class std::unordered_map<std::string, int, struct std::hash<std::string >, struct std::equal_to<std::string >, class std::allocator<struct std::pair<std::string const, int> > > mControlFlagMap;
};